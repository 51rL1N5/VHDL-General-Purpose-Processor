Simulator report for processador
Sun Dec 10 17:00:39 2017
Quartus II 64-Bit Version 13.0.0 Build 156 04/24/2013 SJ Web Edition


---------------------
; Table of Contents ;
---------------------
  1. Legal Notice
  2. Simulator Summary
  3. Simulator Settings
  4. Simulation Waveforms
  5. Coverage Summary
  6. Complete 1/0-Value Coverage
  7. Missing 1-Value Coverage
  8. Missing 0-Value Coverage
  9. Simulator INI Usage
 10. Simulator Messages



----------------
; Legal Notice ;
----------------
Copyright (C) 1991-2013 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.



+--------------------------------------------+
; Simulator Summary                          ;
+-----------------------------+--------------+
; Type                        ; Value        ;
+-----------------------------+--------------+
; Simulation Start Time       ; 0 ps         ;
; Simulation End Time         ; 1.0 us       ;
; Simulation Netlist Size     ; 265 nodes    ;
; Simulation Coverage         ;      62.64 % ;
; Total Number of Transitions ; 2103         ;
; Simulation Breakpoints      ; 0            ;
; Family                      ; Cyclone II   ;
; Device                      ; EP2C35F672C6 ;
+-----------------------------+--------------+


+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Simulator Settings                                                                                                                                                                  ;
+--------------------------------------------------------------------------------------------+------------------------------------------------------------------------+---------------+
; Option                                                                                     ; Setting                                                                ; Default Value ;
+--------------------------------------------------------------------------------------------+------------------------------------------------------------------------+---------------+
; Simulation mode                                                                            ; Timing                                                                 ; Timing        ;
; Start time                                                                                 ; 0 ns                                                                   ; 0 ns          ;
; Simulation results format                                                                  ; VWF                                                                    ;               ;
; Vector input source                                                                        ; /home/linksnow/workspace/pR0C3Ss0r/processor 4.0 normal/teste_JMPZ.vwf ;               ;
; Add pins automatically to simulation output waveforms                                      ; On                                                                     ; On            ;
; Check outputs                                                                              ; Off                                                                    ; Off           ;
; Report simulation coverage                                                                 ; On                                                                     ; On            ;
; Display complete 1/0 value coverage report                                                 ; On                                                                     ; On            ;
; Display missing 1-value coverage report                                                    ; On                                                                     ; On            ;
; Display missing 0-value coverage report                                                    ; On                                                                     ; On            ;
; Detect setup and hold time violations                                                      ; Off                                                                    ; Off           ;
; Detect glitches                                                                            ; Off                                                                    ; Off           ;
; Disable timing delays in Timing Simulation                                                 ; Off                                                                    ; Off           ;
; Generate Signal Activity File                                                              ; Off                                                                    ; Off           ;
; Generate VCD File for PowerPlay Power Analyzer                                             ; Off                                                                    ; Off           ;
; Group bus channels in simulation results                                                   ; Off                                                                    ; Off           ;
; Preserve fewer signal transitions to reduce memory requirements                            ; On                                                                     ; On            ;
; Trigger vector comparison with the specified mode                                          ; INPUT_EDGE                                                             ; INPUT_EDGE    ;
; Disable setup and hold time violations detection in input registers of bi-directional pins ; Off                                                                    ; Off           ;
; Overwrite Waveform Inputs With Simulation Outputs                                          ; Off                                                                    ;               ;
; Perform Glitch Filtering in Timing Simulation                                              ; Auto                                                                   ; Auto          ;
+--------------------------------------------------------------------------------------------+------------------------------------------------------------------------+---------------+


+----------------------+
; Simulation Waveforms ;
+----------------------+
Waveform report data cannot be output to ASCII.
Please use Quartus II 64-Bit to view the waveform report data.


+--------------------------------------------------------------------+
; Coverage Summary                                                   ;
+-----------------------------------------------------+--------------+
; Type                                                ; Value        ;
+-----------------------------------------------------+--------------+
; Total coverage as a percentage                      ;      62.64 % ;
; Total nodes checked                                 ; 265          ;
; Total output ports checked                          ; 265          ;
; Total output ports with complete 1/0-value coverage ; 166          ;
; Total output ports with no 1/0-value coverage       ; 91           ;
; Total output ports with no 1-value coverage         ; 93           ;
; Total output ports with no 0-value coverage         ; 97           ;
+-----------------------------------------------------+--------------+


The following table displays output ports that toggle between 1 and 0 during simulation.
+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Complete 1/0-Value Coverage                                                                                                                                                                        ;
+----------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------+------------------+
; Node Name                                                                              ; Output Port Name                                                                       ; Output Port Type ;
+----------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------+------------------+
; |cpu|dp:datapath|reg4bit_shiftable:accumulador|FFJK:FF0|aux                            ; |cpu|dp:datapath|reg4bit_shiftable:accumulador|FFJK:FF0|aux                            ; regout           ;
; |cpu|dp:datapath|reg4bit_shiftable:accumulador|FFJK:FF1|aux                            ; |cpu|dp:datapath|reg4bit_shiftable:accumulador|FFJK:FF1|aux                            ; regout           ;
; |cpu|dp:datapath|reg4bit_shiftable:accumulador|FFJK:FF2|aux                            ; |cpu|dp:datapath|reg4bit_shiftable:accumulador|FFJK:FF2|aux                            ; regout           ;
; |cpu|ctrl:controller|now_inst[0]                                                       ; |cpu|ctrl:controller|now_inst[0]                                                       ; regout           ;
; |cpu|ctrl:controller|now_inst[1]                                                       ; |cpu|ctrl:controller|now_inst[1]                                                       ; regout           ;
; |cpu|ctrl:controller|now_inst[2]                                                       ; |cpu|ctrl:controller|now_inst[2]                                                       ; regout           ;
; |cpu|bin_to_disp:bin_decoder_ones|Mux6~0                                               ; |cpu|bin_to_disp:bin_decoder_ones|Mux6~0                                               ; combout          ;
; |cpu|bin_to_disp:bin_decoder_ones|Mux5~0                                               ; |cpu|bin_to_disp:bin_decoder_ones|Mux5~0                                               ; combout          ;
; |cpu|bin_to_disp:bin_decoder_ones|Mux4~0                                               ; |cpu|bin_to_disp:bin_decoder_ones|Mux4~0                                               ; combout          ;
; |cpu|bin_to_disp:bin_decoder_ones|Mux3~0                                               ; |cpu|bin_to_disp:bin_decoder_ones|Mux3~0                                               ; combout          ;
; |cpu|bin_to_disp:bin_decoder_ones|Mux2~0                                               ; |cpu|bin_to_disp:bin_decoder_ones|Mux2~0                                               ; combout          ;
; |cpu|bin_to_disp:bin_decoder_ones|Mux1~0                                               ; |cpu|bin_to_disp:bin_decoder_ones|Mux1~0                                               ; combout          ;
; |cpu|bin_to_disp:bin_decoder_ones|Mux0~0                                               ; |cpu|bin_to_disp:bin_decoder_ones|Mux0~0                                               ; combout          ;
; |cpu|ctrl:controller|imm[0]                                                            ; |cpu|ctrl:controller|imm[0]                                                            ; regout           ;
; |cpu|ctrl:controller|SW_In_ACC[1]                                                      ; |cpu|ctrl:controller|SW_In_ACC[1]                                                      ; regout           ;
; |cpu|ctrl:controller|SW_In_ACC[0]                                                      ; |cpu|ctrl:controller|SW_In_ACC[0]                                                      ; regout           ;
; |cpu|dp:datapath|rf:Register_File|reg4bits:R1|FFJK:FF0|aux                             ; |cpu|dp:datapath|rf:Register_File|reg4bits:R1|FFJK:FF0|aux                             ; regout           ;
; |cpu|ctrl:controller|RF_rd                                                             ; |cpu|ctrl:controller|RF_rd                                                             ; regout           ;
; |cpu|dp:datapath|rf:Register_File|decoder2x4:RD_decoder|output~0                       ; |cpu|dp:datapath|rf:Register_File|decoder2x4:RD_decoder|output~0                       ; combout          ;
; |cpu|ctrl:controller|RF_R_addr[0]                                                      ; |cpu|ctrl:controller|RF_R_addr[0]                                                      ; regout           ;
; |cpu|dp:datapath|rf:Register_File|output[0]~0                                          ; |cpu|dp:datapath|rf:Register_File|output[0]~0                                          ; combout          ;
; |cpu|dp:datapath|rf:Register_File|output[0]~1                                          ; |cpu|dp:datapath|rf:Register_File|output[0]~1                                          ; combout          ;
; |cpu|dp:datapath|rf:Register_File|output[0]~2                                          ; |cpu|dp:datapath|rf:Register_File|output[0]~2                                          ; combout          ;
; |cpu|dp:datapath|reg4bit_shiftable:accumulador|mux2x1_1bit:muxRFF0|output~0            ; |cpu|dp:datapath|reg4bit_shiftable:accumulador|mux2x1_1bit:muxRFF0|output~0            ; combout          ;
; |cpu|dp:datapath|reg4bit_shiftable:accumulador|mux2x1_1bit:muxRFF0|output~1            ; |cpu|dp:datapath|reg4bit_shiftable:accumulador|mux2x1_1bit:muxRFF0|output~1            ; combout          ;
; |cpu|dp:datapath|reg4bit_shiftable:accumulador|mux2x1_1bit:muxRFF0|output~2            ; |cpu|dp:datapath|reg4bit_shiftable:accumulador|mux2x1_1bit:muxRFF0|output~2            ; combout          ;
; |cpu|dp:datapath|reg4bit_shiftable:accumulador|mux2x1_1bit:muxRFF0|output~3            ; |cpu|dp:datapath|reg4bit_shiftable:accumulador|mux2x1_1bit:muxRFF0|output~3            ; combout          ;
; |cpu|dp:datapath|reg4bit_shiftable:accumulador|mux2x1_1bit:muxRFF0|output~4            ; |cpu|dp:datapath|reg4bit_shiftable:accumulador|mux2x1_1bit:muxRFF0|output~4            ; combout          ;
; |cpu|ctrl:controller|acc_ld                                                            ; |cpu|ctrl:controller|acc_ld                                                            ; regout           ;
; |cpu|dp:datapath|rf:Register_File|reg4bits:R1|FFJK:FF1|aux                             ; |cpu|dp:datapath|rf:Register_File|reg4bits:R1|FFJK:FF1|aux                             ; regout           ;
; |cpu|dp:datapath|rf:Register_File|output[1]~3                                          ; |cpu|dp:datapath|rf:Register_File|output[1]~3                                          ; combout          ;
; |cpu|dp:datapath|rf:Register_File|output[1]~4                                          ; |cpu|dp:datapath|rf:Register_File|output[1]~4                                          ; combout          ;
; |cpu|dp:datapath|reg4bit_shiftable:accumulador|FFJK:FF1|aux~0                          ; |cpu|dp:datapath|reg4bit_shiftable:accumulador|FFJK:FF1|aux~0                          ; combout          ;
; |cpu|dp:datapath|reg4bit_shiftable:accumulador|mux2x1_1bit:muxRFF1|output~1            ; |cpu|dp:datapath|reg4bit_shiftable:accumulador|mux2x1_1bit:muxRFF1|output~1            ; combout          ;
; |cpu|dp:datapath|reg4bit_shiftable:accumulador|mux2x1_1bit:muxRFF1|output~2            ; |cpu|dp:datapath|reg4bit_shiftable:accumulador|mux2x1_1bit:muxRFF1|output~2            ; combout          ;
; |cpu|dp:datapath|reg4bit_shiftable:accumulador|mux2x1_1bit:muxRFF1|output~3            ; |cpu|dp:datapath|reg4bit_shiftable:accumulador|mux2x1_1bit:muxRFF1|output~3            ; combout          ;
; |cpu|dp:datapath|reg4bit_shiftable:accumulador|mux2x1_1bit:muxRFF1|output~4            ; |cpu|dp:datapath|reg4bit_shiftable:accumulador|mux2x1_1bit:muxRFF1|output~4            ; combout          ;
; |cpu|dp:datapath|reg4bit_shiftable:accumulador|mux2x1_1bit:muxRFF1|output~5            ; |cpu|dp:datapath|reg4bit_shiftable:accumulador|mux2x1_1bit:muxRFF1|output~5            ; combout          ;
; |cpu|dp:datapath|rf:Register_File|output[2]~5                                          ; |cpu|dp:datapath|rf:Register_File|output[2]~5                                          ; combout          ;
; |cpu|dp:datapath|rf:Register_File|output[2]~6                                          ; |cpu|dp:datapath|rf:Register_File|output[2]~6                                          ; combout          ;
; |cpu|dp:datapath|alu:alu1|adder4bits:adder|FullAdder:FA1|carry~0                       ; |cpu|dp:datapath|alu:alu1|adder4bits:adder|FullAdder:FA1|carry~0                       ; combout          ;
; |cpu|dp:datapath|alu:alu1|subtractor4bits:subtrc|adder4bits:Add0|FullAdder:FA1|carry~0 ; |cpu|dp:datapath|alu:alu1|subtractor4bits:subtrc|adder4bits:Add0|FullAdder:FA1|carry~0 ; combout          ;
; |cpu|dp:datapath|reg4bit_shiftable:accumulador|mux2x1_1bit:muxRFF2|output~1            ; |cpu|dp:datapath|reg4bit_shiftable:accumulador|mux2x1_1bit:muxRFF2|output~1            ; combout          ;
; |cpu|dp:datapath|reg4bit_shiftable:accumulador|mux2x1_1bit:muxRFF2|output~2            ; |cpu|dp:datapath|reg4bit_shiftable:accumulador|mux2x1_1bit:muxRFF2|output~2            ; combout          ;
; |cpu|dp:datapath|reg4bit_shiftable:accumulador|mux2x1_1bit:muxRFF2|output~3            ; |cpu|dp:datapath|reg4bit_shiftable:accumulador|mux2x1_1bit:muxRFF2|output~3            ; combout          ;
; |cpu|dp:datapath|reg4bit_shiftable:accumulador|mux2x1_1bit:muxRFF2|output~4            ; |cpu|dp:datapath|reg4bit_shiftable:accumulador|mux2x1_1bit:muxRFF2|output~4            ; combout          ;
; |cpu|dp:datapath|reg4bit_shiftable:accumulador|mux2x1_1bit:muxRFF2|output~5            ; |cpu|dp:datapath|reg4bit_shiftable:accumulador|mux2x1_1bit:muxRFF2|output~5            ; combout          ;
; |cpu|dp:datapath|reg4bit_shiftable:accumulador|mux2x1_1bit:muxRFF2|output~6            ; |cpu|dp:datapath|reg4bit_shiftable:accumulador|mux2x1_1bit:muxRFF2|output~6            ; combout          ;
; |cpu|dp:datapath|reg4bit_shiftable:accumulador|mux2x1_1bit:muxRFF3|output~0            ; |cpu|dp:datapath|reg4bit_shiftable:accumulador|mux2x1_1bit:muxRFF3|output~0            ; combout          ;
; |cpu|dp:datapath|rf:Register_File|output[3]~7                                          ; |cpu|dp:datapath|rf:Register_File|output[3]~7                                          ; combout          ;
; |cpu|dp:datapath|rf:Register_File|output[3]~8                                          ; |cpu|dp:datapath|rf:Register_File|output[3]~8                                          ; combout          ;
; |cpu|dp:datapath|alu:alu1|mux8x1_4bits:OUPUT|Mux0~0                                    ; |cpu|dp:datapath|alu:alu1|mux8x1_4bits:OUPUT|Mux0~0                                    ; combout          ;
; |cpu|dp:datapath|alu:alu1|mux8x1_4bits:OUPUT|Mux0~1                                    ; |cpu|dp:datapath|alu:alu1|mux8x1_4bits:OUPUT|Mux0~1                                    ; combout          ;
; |cpu|dp:datapath|alu:alu1|mux8x1_4bits:OUPUT|Mux0~2                                    ; |cpu|dp:datapath|alu:alu1|mux8x1_4bits:OUPUT|Mux0~2                                    ; combout          ;
; |cpu|dp:datapath|reg4bit_shiftable:accumulador|mux2x1_1bit:muxRFF3|output~1            ; |cpu|dp:datapath|reg4bit_shiftable:accumulador|mux2x1_1bit:muxRFF3|output~1            ; combout          ;
; |cpu|dp:datapath|reg4bit_shiftable:accumulador|mux2x1_1bit:muxRFF3|output~4            ; |cpu|dp:datapath|reg4bit_shiftable:accumulador|mux2x1_1bit:muxRFF3|output~4            ; combout          ;
; |cpu|ctrl:controller|state.fetch                                                       ; |cpu|ctrl:controller|state.fetch                                                       ; regout           ;
; |cpu|ctrl:controller|state.jmp_if_zero_jmp                                             ; |cpu|ctrl:controller|state.jmp_if_zero_jmp                                             ; regout           ;
; |cpu|ctrl:controller|WideOr18~0                                                        ; |cpu|ctrl:controller|WideOr18~0                                                        ; combout          ;
; |cpu|ctrl:controller|state.Decod                                                       ; |cpu|ctrl:controller|state.Decod                                                       ; regout           ;
; |cpu|ctrl:controller|WideOr0~0                                                         ; |cpu|ctrl:controller|WideOr0~0                                                         ; combout          ;
; |cpu|ctrl:controller|state.jmpz_state                                                  ; |cpu|ctrl:controller|state.jmpz_state                                                  ; regout           ;
; |cpu|ctrl:controller|WideOr12~0                                                        ; |cpu|ctrl:controller|WideOr12~0                                                        ; combout          ;
; |cpu|ctrl:controller|WideOr18                                                          ; |cpu|ctrl:controller|WideOr18                                                          ; combout          ;
; |cpu|ctrl:controller|state.movr_state                                                  ; |cpu|ctrl:controller|state.movr_state                                                  ; regout           ;
; |cpu|ctrl:controller|state.jmp_state                                                   ; |cpu|ctrl:controller|state.jmp_state                                                   ; regout           ;
; |cpu|ctrl:controller|Selector35~1                                                      ; |cpu|ctrl:controller|Selector35~1                                                      ; combout          ;
; |cpu|ctrl:controller|Selector35~2                                                      ; |cpu|ctrl:controller|Selector35~2                                                      ; combout          ;
; |cpu|ctrl:controller|state.load_state                                                  ; |cpu|ctrl:controller|state.load_state                                                  ; regout           ;
; |cpu|ctrl:controller|Selector34~0                                                      ; |cpu|ctrl:controller|Selector34~0                                                      ; combout          ;
; |cpu|ctrl:controller|Selector34~1                                                      ; |cpu|ctrl:controller|Selector34~1                                                      ; combout          ;
; |cpu|ctrl:controller|state.sub_state                                                   ; |cpu|ctrl:controller|state.sub_state                                                   ; regout           ;
; |cpu|ctrl:controller|Selector33~0                                                      ; |cpu|ctrl:controller|Selector33~0                                                      ; combout          ;
; |cpu|ctrl:controller|Selector33~1                                                      ; |cpu|ctrl:controller|Selector33~1                                                      ; combout          ;
; |cpu|ctrl:controller|ADDRESS[0]                                                        ; |cpu|ctrl:controller|ADDRESS[0]                                                        ; regout           ;
; |cpu|ctrl:controller|state.mova_state                                                  ; |cpu|ctrl:controller|state.mova_state                                                  ; regout           ;
; |cpu|ctrl:controller|Selector38~0                                                      ; |cpu|ctrl:controller|Selector38~0                                                      ; combout          ;
; |cpu|ctrl:controller|WideOr15~0                                                        ; |cpu|ctrl:controller|WideOr15~0                                                        ; combout          ;
; |cpu|ctrl:controller|Selector30~0                                                      ; |cpu|ctrl:controller|Selector30~0                                                      ; combout          ;
; |cpu|ctrl:controller|Selector31~0                                                      ; |cpu|ctrl:controller|Selector31~0                                                      ; combout          ;
; |cpu|ctrl:controller|RF_wr                                                             ; |cpu|ctrl:controller|RF_wr                                                             ; regout           ;
; |cpu|dp:datapath|rf:Register_File|decoder2x4:WR_decoder|output~0                       ; |cpu|dp:datapath|rf:Register_File|decoder2x4:WR_decoder|output~0                       ; combout          ;
; |cpu|ctrl:controller|WideOr9~0                                                         ; |cpu|ctrl:controller|WideOr9~0                                                         ; combout          ;
; |cpu|ctrl:controller|WideOr9                                                           ; |cpu|ctrl:controller|WideOr9                                                           ; combout          ;
; |cpu|ctrl:controller|Selector25~0                                                      ; |cpu|ctrl:controller|Selector25~0                                                      ; combout          ;
; |cpu|ctrl:controller|ADDRESS[2]                                                        ; |cpu|ctrl:controller|ADDRESS[2]                                                        ; regout           ;
; |cpu|dp:datapath|rf:Register_File|decoder2x4:WR_decoder|output[0]                      ; |cpu|dp:datapath|rf:Register_File|decoder2x4:WR_decoder|output[0]                      ; combout          ;
; |cpu|ctrl:controller|WideOr12~1                                                        ; |cpu|ctrl:controller|WideOr12~1                                                        ; combout          ;
; |cpu|ctrl:controller|Selector27~0                                                      ; |cpu|ctrl:controller|Selector27~0                                                      ; combout          ;
; |cpu|ctrl:controller|ADDRESS[1]                                                        ; |cpu|ctrl:controller|ADDRESS[1]                                                        ; regout           ;
; |cpu|ctrl:controller|Selector5~1                                                       ; |cpu|ctrl:controller|Selector5~1                                                       ; combout          ;
; |cpu|ctrl:controller|OPCODE[3]                                                         ; |cpu|ctrl:controller|OPCODE[3]                                                         ; regout           ;
; |cpu|ctrl:controller|OPCODE[2]                                                         ; |cpu|ctrl:controller|OPCODE[2]                                                         ; regout           ;
; |cpu|ctrl:controller|OPCODE[1]                                                         ; |cpu|ctrl:controller|OPCODE[1]                                                         ; regout           ;
; |cpu|ctrl:controller|OPCODE[0]                                                         ; |cpu|ctrl:controller|OPCODE[0]                                                         ; regout           ;
; |cpu|ctrl:controller|Mux7~3                                                            ; |cpu|ctrl:controller|Mux7~3                                                            ; combout          ;
; |cpu|ctrl:controller|Mux7~4                                                            ; |cpu|ctrl:controller|Mux7~4                                                            ; combout          ;
; |cpu|ctrl:controller|Mux7~6                                                            ; |cpu|ctrl:controller|Mux7~6                                                            ; combout          ;
; |cpu|ctrl:controller|Mux7~8                                                            ; |cpu|ctrl:controller|Mux7~8                                                            ; combout          ;
; |cpu|ctrl:controller|Mux7~11                                                           ; |cpu|ctrl:controller|Mux7~11                                                           ; combout          ;
; |cpu|ctrl:controller|Mux7~12                                                           ; |cpu|ctrl:controller|Mux7~12                                                           ; combout          ;
; |cpu|ctrl:controller|Mux7~13                                                           ; |cpu|ctrl:controller|Mux7~13                                                           ; combout          ;
; |cpu|ctrl:controller|Mux7~14                                                           ; |cpu|ctrl:controller|Mux7~14                                                           ; combout          ;
; |cpu|ctrl:controller|Mux7~15                                                           ; |cpu|ctrl:controller|Mux7~15                                                           ; combout          ;
; |cpu|ctrl:controller|Mux7~18                                                           ; |cpu|ctrl:controller|Mux7~18                                                           ; combout          ;
; |cpu|ctrl:controller|Mux7~19                                                           ; |cpu|ctrl:controller|Mux7~19                                                           ; combout          ;
; |cpu|ctrl:controller|PC[0]                                                             ; |cpu|ctrl:controller|PC[0]                                                             ; regout           ;
; |cpu|ctrl:controller|PC[1]                                                             ; |cpu|ctrl:controller|PC[1]                                                             ; regout           ;
; |cpu|ctrl:controller|PC[2]                                                             ; |cpu|ctrl:controller|PC[2]                                                             ; regout           ;
; |cpu|ctrl:controller|Mux6~0                                                            ; |cpu|ctrl:controller|Mux6~0                                                            ; combout          ;
; |cpu|ctrl:controller|Mux7~22                                                           ; |cpu|ctrl:controller|Mux7~22                                                           ; combout          ;
; |cpu|ctrl:controller|Selector26~0                                                      ; |cpu|ctrl:controller|Selector26~0                                                      ; combout          ;
; |cpu|ctrl:controller|PC[3]                                                             ; |cpu|ctrl:controller|PC[3]                                                             ; regout           ;
; |cpu|ctrl:controller|Mux4~0                                                            ; |cpu|ctrl:controller|Mux4~0                                                            ; combout          ;
; |cpu|ctrl:controller|Mux5~0                                                            ; |cpu|ctrl:controller|Mux5~0                                                            ; combout          ;
; |cpu|ctrl:controller|Mux0~0                                                            ; |cpu|ctrl:controller|Mux0~0                                                            ; combout          ;
; |cpu|ctrl:controller|Mux1~0                                                            ; |cpu|ctrl:controller|Mux1~0                                                            ; combout          ;
; |cpu|ctrl:controller|Mux2~0                                                            ; |cpu|ctrl:controller|Mux2~0                                                            ; combout          ;
; |cpu|ctrl:controller|Mux3~0                                                            ; |cpu|ctrl:controller|Mux3~0                                                            ; combout          ;
; |cpu|dp:datapath|comparador_4bits:IFZERO|comparador_full:comp_3|out_eq~0               ; |cpu|dp:datapath|comparador_4bits:IFZERO|comparador_full:comp_3|out_eq~0               ; combout          ;
; |cpu|ctrl:controller|Selector3~1                                                       ; |cpu|ctrl:controller|Selector3~1                                                       ; combout          ;
; |cpu|ctrl:controller|PC[3]~0                                                           ; |cpu|ctrl:controller|PC[3]~0                                                           ; combout          ;
; |cpu|ctrl:controller|Selector3~2                                                       ; |cpu|ctrl:controller|Selector3~2                                                       ; combout          ;
; |cpu|ctrl:controller|Selector2~0                                                       ; |cpu|ctrl:controller|Selector2~0                                                       ; combout          ;
; |cpu|ctrl:controller|Selector2~1                                                       ; |cpu|ctrl:controller|Selector2~1                                                       ; combout          ;
; |cpu|ctrl:controller|Selector2~2                                                       ; |cpu|ctrl:controller|Selector2~2                                                       ; combout          ;
; |cpu|ctrl:controller|Add0~0                                                            ; |cpu|ctrl:controller|Add0~0                                                            ; combout          ;
; |cpu|ctrl:controller|Selector1~0                                                       ; |cpu|ctrl:controller|Selector1~0                                                       ; combout          ;
; |cpu|ctrl:controller|Add1~0                                                            ; |cpu|ctrl:controller|Add1~0                                                            ; combout          ;
; |cpu|ctrl:controller|PC~1                                                              ; |cpu|ctrl:controller|PC~1                                                              ; combout          ;
; |cpu|ctrl:controller|Selector1~1                                                       ; |cpu|ctrl:controller|Selector1~1                                                       ; combout          ;
; |cpu|ctrl:controller|Add0~1                                                            ; |cpu|ctrl:controller|Add0~1                                                            ; combout          ;
; |cpu|ctrl:controller|PC~2                                                              ; |cpu|ctrl:controller|PC~2                                                              ; combout          ;
; |cpu|ctrl:controller|Selector0~0                                                       ; |cpu|ctrl:controller|Selector0~0                                                       ; combout          ;
; |cpu|ctrl:controller|Selector0~1                                                       ; |cpu|ctrl:controller|Selector0~1                                                       ; combout          ;
; |cpu|ctrl:controller|Selector0~2                                                       ; |cpu|ctrl:controller|Selector0~2                                                       ; combout          ;
; |cpu|dp:datapath|alu:alu1|mux8x1_4bits:OUPUT|Mux0~3                                    ; |cpu|dp:datapath|alu:alu1|mux8x1_4bits:OUPUT|Mux0~3                                    ; combout          ;
; |cpu|dp:datapath|alu:alu1|mux8x1_4bits:OUPUT|Mux0~4                                    ; |cpu|dp:datapath|alu:alu1|mux8x1_4bits:OUPUT|Mux0~4                                    ; combout          ;
; |cpu|dp:datapath|reg4bit_shiftable:accumulador|mux2x1_1bit:muxRFF1|output~6            ; |cpu|dp:datapath|reg4bit_shiftable:accumulador|mux2x1_1bit:muxRFF1|output~6            ; combout          ;
; |cpu|dp:datapath|reg4bit_shiftable:accumulador|mux2x1_1bit:muxRFF1|output~7            ; |cpu|dp:datapath|reg4bit_shiftable:accumulador|mux2x1_1bit:muxRFF1|output~7            ; combout          ;
; |cpu|output[0]                                                                         ; |cpu|output[0]                                                                         ; padio            ;
; |cpu|output[1]                                                                         ; |cpu|output[1]                                                                         ; padio            ;
; |cpu|output[2]                                                                         ; |cpu|output[2]                                                                         ; padio            ;
; |cpu|OPCdisp0[0]                                                                       ; |cpu|OPCdisp0[0]                                                                       ; padio            ;
; |cpu|OPCdisp0[3]                                                                       ; |cpu|OPCdisp0[3]                                                                       ; padio            ;
; |cpu|OPCdisp0[4]                                                                       ; |cpu|OPCdisp0[4]                                                                       ; padio            ;
; |cpu|OPCdisp0[5]                                                                       ; |cpu|OPCdisp0[5]                                                                       ; padio            ;
; |cpu|OPCdisp1[0]                                                                       ; |cpu|OPCdisp1[0]                                                                       ; padio            ;
; |cpu|OPCdisp1[3]                                                                       ; |cpu|OPCdisp1[3]                                                                       ; padio            ;
; |cpu|OPCdisp1[4]                                                                       ; |cpu|OPCdisp1[4]                                                                       ; padio            ;
; |cpu|OPCdisp1[5]                                                                       ; |cpu|OPCdisp1[5]                                                                       ; padio            ;
; |cpu|OPCdisp2[0]                                                                       ; |cpu|OPCdisp2[0]                                                                       ; padio            ;
; |cpu|OPCdisp2[3]                                                                       ; |cpu|OPCdisp2[3]                                                                       ; padio            ;
; |cpu|OPCdisp2[4]                                                                       ; |cpu|OPCdisp2[4]                                                                       ; padio            ;
; |cpu|OPCdisp2[5]                                                                       ; |cpu|OPCdisp2[5]                                                                       ; padio            ;
; |cpu|display0[0]                                                                       ; |cpu|display0[0]                                                                       ; padio            ;
; |cpu|display0[1]                                                                       ; |cpu|display0[1]                                                                       ; padio            ;
; |cpu|display0[2]                                                                       ; |cpu|display0[2]                                                                       ; padio            ;
; |cpu|display0[3]                                                                       ; |cpu|display0[3]                                                                       ; padio            ;
; |cpu|display0[4]                                                                       ; |cpu|display0[4]                                                                       ; padio            ;
; |cpu|display0[5]                                                                       ; |cpu|display0[5]                                                                       ; padio            ;
; |cpu|display0[6]                                                                       ; |cpu|display0[6]                                                                       ; padio            ;
; |cpu|clk                                                                               ; |cpu|clk~corein                                                                        ; combout          ;
; |cpu|dp:datapath|rf:Register_File|reg4bits:R1|FFJK:FF0|aux~feeder                      ; |cpu|dp:datapath|rf:Register_File|reg4bits:R1|FFJK:FF0|aux~feeder                      ; combout          ;
; |cpu|dp:datapath|rf:Register_File|reg4bits:R1|FFJK:FF1|aux~feeder                      ; |cpu|dp:datapath|rf:Register_File|reg4bits:R1|FFJK:FF1|aux~feeder                      ; combout          ;
; |cpu|dp:datapath|rf:Register_File|reg4bits:R1|FFJK:FF2|aux~feeder                      ; |cpu|dp:datapath|rf:Register_File|reg4bits:R1|FFJK:FF2|aux~feeder                      ; combout          ;
+----------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------+------------------+


The following table displays output ports that do not toggle to 1 during simulation.
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Missing 1-Value Coverage                                                                                                                                                     ;
+-----------------------------------------------------------------------------+-----------------------------------------------------------------------------+------------------+
; Node Name                                                                   ; Output Port Name                                                            ; Output Port Type ;
+-----------------------------------------------------------------------------+-----------------------------------------------------------------------------+------------------+
; |cpu|dp:datapath|reg4bit_shiftable:accumulador|FFJK:FF3|aux                 ; |cpu|dp:datapath|reg4bit_shiftable:accumulador|FFJK:FF3|aux                 ; regout           ;
; |cpu|ctrl:controller|now_inst[3]                                            ; |cpu|ctrl:controller|now_inst[3]                                            ; regout           ;
; |cpu|bin2bcd_12bit:bin2bcd|LessThan15~0                                     ; |cpu|bin2bcd_12bit:bin2bcd|LessThan15~0                                     ; combout          ;
; |cpu|ctrl:controller|acc_shift_r                                            ; |cpu|ctrl:controller|acc_shift_r                                            ; regout           ;
; |cpu|ctrl:controller|RF_R_addr[1]                                           ; |cpu|ctrl:controller|RF_R_addr[1]                                           ; regout           ;
; |cpu|dp:datapath|rf:Register_File|reg4bits:R2|FFJK:FF0|aux                  ; |cpu|dp:datapath|rf:Register_File|reg4bits:R2|FFJK:FF0|aux                  ; regout           ;
; |cpu|dp:datapath|rf:Register_File|reg4bits:R3|FFJK:FF0|aux                  ; |cpu|dp:datapath|rf:Register_File|reg4bits:R3|FFJK:FF0|aux                  ; regout           ;
; |cpu|ctrl:controller|Alu_SW[1]                                              ; |cpu|ctrl:controller|Alu_SW[1]                                              ; regout           ;
; |cpu|ctrl:controller|Alu_SW[2]                                              ; |cpu|ctrl:controller|Alu_SW[2]                                              ; regout           ;
; |cpu|ctrl:controller|acc_shift_l                                            ; |cpu|ctrl:controller|acc_shift_l                                            ; regout           ;
; |cpu|dp:datapath|reg4bit_shiftable:accumulador|mux2x1_1bit:muxRFF1|output~0 ; |cpu|dp:datapath|reg4bit_shiftable:accumulador|mux2x1_1bit:muxRFF1|output~0 ; combout          ;
; |cpu|dp:datapath|rf:Register_File|reg4bits:R2|FFJK:FF1|aux                  ; |cpu|dp:datapath|rf:Register_File|reg4bits:R2|FFJK:FF1|aux                  ; regout           ;
; |cpu|dp:datapath|rf:Register_File|reg4bits:R3|FFJK:FF1|aux                  ; |cpu|dp:datapath|rf:Register_File|reg4bits:R3|FFJK:FF1|aux                  ; regout           ;
; |cpu|dp:datapath|rf:Register_File|reg4bits:R0|FFJK:FF1|aux                  ; |cpu|dp:datapath|rf:Register_File|reg4bits:R0|FFJK:FF1|aux                  ; regout           ;
; |cpu|ctrl:controller|imm[1]                                                 ; |cpu|ctrl:controller|imm[1]                                                 ; regout           ;
; |cpu|dp:datapath|reg4bit_shiftable:accumulador|mux2x1_1bit:muxRFF2|output~0 ; |cpu|dp:datapath|reg4bit_shiftable:accumulador|mux2x1_1bit:muxRFF2|output~0 ; combout          ;
; |cpu|dp:datapath|rf:Register_File|reg4bits:R1|FFJK:FF2|aux                  ; |cpu|dp:datapath|rf:Register_File|reg4bits:R1|FFJK:FF2|aux                  ; regout           ;
; |cpu|dp:datapath|rf:Register_File|reg4bits:R2|FFJK:FF2|aux                  ; |cpu|dp:datapath|rf:Register_File|reg4bits:R2|FFJK:FF2|aux                  ; regout           ;
; |cpu|dp:datapath|rf:Register_File|reg4bits:R3|FFJK:FF2|aux                  ; |cpu|dp:datapath|rf:Register_File|reg4bits:R3|FFJK:FF2|aux                  ; regout           ;
; |cpu|dp:datapath|rf:Register_File|reg4bits:R0|FFJK:FF2|aux                  ; |cpu|dp:datapath|rf:Register_File|reg4bits:R0|FFJK:FF2|aux                  ; regout           ;
; |cpu|dp:datapath|rf:Register_File|reg4bits:R2|FFJK:FF3|aux                  ; |cpu|dp:datapath|rf:Register_File|reg4bits:R2|FFJK:FF3|aux                  ; regout           ;
; |cpu|dp:datapath|rf:Register_File|reg4bits:R1|FFJK:FF3|aux                  ; |cpu|dp:datapath|rf:Register_File|reg4bits:R1|FFJK:FF3|aux                  ; regout           ;
; |cpu|dp:datapath|rf:Register_File|reg4bits:R3|FFJK:FF3|aux                  ; |cpu|dp:datapath|rf:Register_File|reg4bits:R3|FFJK:FF3|aux                  ; regout           ;
; |cpu|dp:datapath|rf:Register_File|reg4bits:R0|FFJK:FF3|aux                  ; |cpu|dp:datapath|rf:Register_File|reg4bits:R0|FFJK:FF3|aux                  ; regout           ;
; |cpu|ctrl:controller|imm[3]                                                 ; |cpu|ctrl:controller|imm[3]                                                 ; regout           ;
; |cpu|dp:datapath|reg4bit_shiftable:accumulador|mux2x1_1bit:muxRFF3|output~2 ; |cpu|dp:datapath|reg4bit_shiftable:accumulador|mux2x1_1bit:muxRFF3|output~2 ; combout          ;
; |cpu|dp:datapath|reg4bit_shiftable:accumulador|mux2x1_1bit:muxRFF3|output~3 ; |cpu|dp:datapath|reg4bit_shiftable:accumulador|mux2x1_1bit:muxRFF3|output~3 ; combout          ;
; |cpu|ctrl:controller|state.shfl_state                                       ; |cpu|ctrl:controller|state.shfl_state                                       ; regout           ;
; |cpu|ctrl:controller|state.shfr_state                                       ; |cpu|ctrl:controller|state.shfr_state                                       ; regout           ;
; |cpu|ctrl:controller|state.done                                             ; |cpu|ctrl:controller|state.done                                             ; regout           ;
; |cpu|ctrl:controller|state.xorr_state                                       ; |cpu|ctrl:controller|state.xorr_state                                       ; regout           ;
; |cpu|ctrl:controller|state.add_state                                        ; |cpu|ctrl:controller|state.add_state                                        ; regout           ;
; |cpu|ctrl:controller|state.andr_state                                       ; |cpu|ctrl:controller|state.andr_state                                       ; regout           ;
; |cpu|ctrl:controller|state.xnorr_state                                      ; |cpu|ctrl:controller|state.xnorr_state                                      ; regout           ;
; |cpu|ctrl:controller|Selector35~0                                           ; |cpu|ctrl:controller|Selector35~0                                           ; combout          ;
; |cpu|ctrl:controller|state.halt_state                                       ; |cpu|ctrl:controller|state.halt_state                                       ; regout           ;
; |cpu|ctrl:controller|state.orr_state                                        ; |cpu|ctrl:controller|state.orr_state                                        ; regout           ;
; |cpu|ctrl:controller|state.nandr_state                                      ; |cpu|ctrl:controller|state.nandr_state                                      ; regout           ;
; |cpu|ctrl:controller|state.inv_state                                        ; |cpu|ctrl:controller|state.inv_state                                        ; regout           ;
; |cpu|ctrl:controller|Selector36~0                                           ; |cpu|ctrl:controller|Selector36~0                                           ; combout          ;
; |cpu|ctrl:controller|Selector32~0                                           ; |cpu|ctrl:controller|Selector32~0                                           ; combout          ;
; |cpu|ctrl:controller|Selector29~0                                           ; |cpu|ctrl:controller|Selector29~0                                           ; combout          ;
; |cpu|ctrl:controller|RF_W_addr[1]                                           ; |cpu|ctrl:controller|RF_W_addr[1]                                           ; regout           ;
; |cpu|ctrl:controller|ADDRESS[3]                                             ; |cpu|ctrl:controller|ADDRESS[3]                                             ; regout           ;
; |cpu|dp:datapath|rf:Register_File|decoder2x4:WR_decoder|output~1            ; |cpu|dp:datapath|rf:Register_File|decoder2x4:WR_decoder|output~1            ; combout          ;
; |cpu|dp:datapath|rf:Register_File|decoder2x4:WR_decoder|output~2            ; |cpu|dp:datapath|rf:Register_File|decoder2x4:WR_decoder|output~2            ; combout          ;
; |cpu|ctrl:controller|Selector37~0                                           ; |cpu|ctrl:controller|Selector37~0                                           ; combout          ;
; |cpu|ctrl:controller|Selector37~1                                           ; |cpu|ctrl:controller|Selector37~1                                           ; combout          ;
; |cpu|ctrl:controller|Selector36~1                                           ; |cpu|ctrl:controller|Selector36~1                                           ; combout          ;
; |cpu|ctrl:controller|Selector28~0                                           ; |cpu|ctrl:controller|Selector28~0                                           ; combout          ;
; |cpu|ctrl:controller|Selector5~0                                            ; |cpu|ctrl:controller|Selector5~0                                            ; combout          ;
; |cpu|ctrl:controller|Mux7~0                                                 ; |cpu|ctrl:controller|Mux7~0                                                 ; combout          ;
; |cpu|ctrl:controller|Mux7~1                                                 ; |cpu|ctrl:controller|Mux7~1                                                 ; combout          ;
; |cpu|ctrl:controller|Mux7~2                                                 ; |cpu|ctrl:controller|Mux7~2                                                 ; combout          ;
; |cpu|ctrl:controller|state.init~0                                           ; |cpu|ctrl:controller|state.init~0                                           ; combout          ;
; |cpu|ctrl:controller|state.done~0                                           ; |cpu|ctrl:controller|state.done~0                                           ; combout          ;
; |cpu|ctrl:controller|Mux7~5                                                 ; |cpu|ctrl:controller|Mux7~5                                                 ; combout          ;
; |cpu|ctrl:controller|state.xorr_state~0                                     ; |cpu|ctrl:controller|state.xorr_state~0                                     ; combout          ;
; |cpu|ctrl:controller|Mux7~7                                                 ; |cpu|ctrl:controller|Mux7~7                                                 ; combout          ;
; |cpu|ctrl:controller|Mux7~9                                                 ; |cpu|ctrl:controller|Mux7~9                                                 ; combout          ;
; |cpu|ctrl:controller|Mux7~10                                                ; |cpu|ctrl:controller|Mux7~10                                                ; combout          ;
; |cpu|ctrl:controller|Mux7~16                                                ; |cpu|ctrl:controller|Mux7~16                                                ; combout          ;
; |cpu|ctrl:controller|Mux7~17                                                ; |cpu|ctrl:controller|Mux7~17                                                ; combout          ;
; |cpu|ctrl:controller|Mux7~20                                                ; |cpu|ctrl:controller|Mux7~20                                                ; combout          ;
; |cpu|ctrl:controller|Mux7~21                                                ; |cpu|ctrl:controller|Mux7~21                                                ; combout          ;
; |cpu|ctrl:controller|Selector3~0                                            ; |cpu|ctrl:controller|Selector3~0                                            ; combout          ;
; |cpu|output[3]                                                              ; |cpu|output[3]                                                              ; padio            ;
; |cpu|OPCdisp0[1]                                                            ; |cpu|OPCdisp0[1]                                                            ; padio            ;
; |cpu|OPCdisp0[2]                                                            ; |cpu|OPCdisp0[2]                                                            ; padio            ;
; |cpu|OPCdisp0[6]                                                            ; |cpu|OPCdisp0[6]                                                            ; padio            ;
; |cpu|OPCdisp1[1]                                                            ; |cpu|OPCdisp1[1]                                                            ; padio            ;
; |cpu|OPCdisp1[2]                                                            ; |cpu|OPCdisp1[2]                                                            ; padio            ;
; |cpu|OPCdisp1[6]                                                            ; |cpu|OPCdisp1[6]                                                            ; padio            ;
; |cpu|OPCdisp2[1]                                                            ; |cpu|OPCdisp2[1]                                                            ; padio            ;
; |cpu|OPCdisp2[2]                                                            ; |cpu|OPCdisp2[2]                                                            ; padio            ;
; |cpu|OPCdisp2[6]                                                            ; |cpu|OPCdisp2[6]                                                            ; padio            ;
; |cpu|OPCdisp3[0]                                                            ; |cpu|OPCdisp3[0]                                                            ; padio            ;
; |cpu|OPCdisp3[1]                                                            ; |cpu|OPCdisp3[1]                                                            ; padio            ;
; |cpu|OPCdisp3[2]                                                            ; |cpu|OPCdisp3[2]                                                            ; padio            ;
; |cpu|OPCdisp3[3]                                                            ; |cpu|OPCdisp3[3]                                                            ; padio            ;
; |cpu|OPCdisp3[4]                                                            ; |cpu|OPCdisp3[4]                                                            ; padio            ;
; |cpu|OPCdisp3[5]                                                            ; |cpu|OPCdisp3[5]                                                            ; padio            ;
; |cpu|OPCdisp3[6]                                                            ; |cpu|OPCdisp3[6]                                                            ; padio            ;
; |cpu|display1[0]                                                            ; |cpu|display1[0]                                                            ; padio            ;
; |cpu|display1[1]                                                            ; |cpu|display1[1]                                                            ; padio            ;
; |cpu|display1[2]                                                            ; |cpu|display1[2]                                                            ; padio            ;
; |cpu|display1[3]                                                            ; |cpu|display1[3]                                                            ; padio            ;
; |cpu|display1[4]                                                            ; |cpu|display1[4]                                                            ; padio            ;
; |cpu|display1[5]                                                            ; |cpu|display1[5]                                                            ; padio            ;
; |cpu|display1[6]                                                            ; |cpu|display1[6]                                                            ; padio            ;
; |cpu|start                                                                  ; |cpu|start~corein                                                           ; combout          ;
; |cpu|dp:datapath|rf:Register_File|reg4bits:R1|FFJK:FF3|aux~feeder           ; |cpu|dp:datapath|rf:Register_File|reg4bits:R1|FFJK:FF3|aux~feeder           ; combout          ;
; |cpu|dp:datapath|rf:Register_File|reg4bits:R2|FFJK:FF3|aux~feeder           ; |cpu|dp:datapath|rf:Register_File|reg4bits:R2|FFJK:FF3|aux~feeder           ; combout          ;
+-----------------------------------------------------------------------------+-----------------------------------------------------------------------------+------------------+


The following table displays output ports that do not toggle to 0 during simulation.
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Missing 0-Value Coverage                                                                                                                                                     ;
+-----------------------------------------------------------------------------+-----------------------------------------------------------------------------+------------------+
; Node Name                                                                   ; Output Port Name                                                            ; Output Port Type ;
+-----------------------------------------------------------------------------+-----------------------------------------------------------------------------+------------------+
; |cpu|dp:datapath|reg4bit_shiftable:accumulador|FFJK:FF3|aux                 ; |cpu|dp:datapath|reg4bit_shiftable:accumulador|FFJK:FF3|aux                 ; regout           ;
; |cpu|ctrl:controller|now_inst[3]                                            ; |cpu|ctrl:controller|now_inst[3]                                            ; regout           ;
; |cpu|bin2bcd_12bit:bin2bcd|LessThan15~0                                     ; |cpu|bin2bcd_12bit:bin2bcd|LessThan15~0                                     ; combout          ;
; |cpu|ctrl:controller|acc_shift_r                                            ; |cpu|ctrl:controller|acc_shift_r                                            ; regout           ;
; |cpu|ctrl:controller|RF_R_addr[1]                                           ; |cpu|ctrl:controller|RF_R_addr[1]                                           ; regout           ;
; |cpu|dp:datapath|rf:Register_File|reg4bits:R2|FFJK:FF0|aux                  ; |cpu|dp:datapath|rf:Register_File|reg4bits:R2|FFJK:FF0|aux                  ; regout           ;
; |cpu|dp:datapath|rf:Register_File|reg4bits:R3|FFJK:FF0|aux                  ; |cpu|dp:datapath|rf:Register_File|reg4bits:R3|FFJK:FF0|aux                  ; regout           ;
; |cpu|dp:datapath|rf:Register_File|reg4bits:R0|FFJK:FF0|aux                  ; |cpu|dp:datapath|rf:Register_File|reg4bits:R0|FFJK:FF0|aux                  ; regout           ;
; |cpu|ctrl:controller|Alu_SW[1]                                              ; |cpu|ctrl:controller|Alu_SW[1]                                              ; regout           ;
; |cpu|ctrl:controller|Alu_SW[0]                                              ; |cpu|ctrl:controller|Alu_SW[0]                                              ; regout           ;
; |cpu|ctrl:controller|Alu_SW[2]                                              ; |cpu|ctrl:controller|Alu_SW[2]                                              ; regout           ;
; |cpu|ctrl:controller|acc_shift_l                                            ; |cpu|ctrl:controller|acc_shift_l                                            ; regout           ;
; |cpu|dp:datapath|reg4bit_shiftable:accumulador|mux2x1_1bit:muxRFF1|output~0 ; |cpu|dp:datapath|reg4bit_shiftable:accumulador|mux2x1_1bit:muxRFF1|output~0 ; combout          ;
; |cpu|dp:datapath|rf:Register_File|reg4bits:R2|FFJK:FF1|aux                  ; |cpu|dp:datapath|rf:Register_File|reg4bits:R2|FFJK:FF1|aux                  ; regout           ;
; |cpu|dp:datapath|rf:Register_File|reg4bits:R3|FFJK:FF1|aux                  ; |cpu|dp:datapath|rf:Register_File|reg4bits:R3|FFJK:FF1|aux                  ; regout           ;
; |cpu|dp:datapath|rf:Register_File|reg4bits:R0|FFJK:FF1|aux                  ; |cpu|dp:datapath|rf:Register_File|reg4bits:R0|FFJK:FF1|aux                  ; regout           ;
; |cpu|ctrl:controller|imm[1]                                                 ; |cpu|ctrl:controller|imm[1]                                                 ; regout           ;
; |cpu|dp:datapath|reg4bit_shiftable:accumulador|mux2x1_1bit:muxRFF2|output~0 ; |cpu|dp:datapath|reg4bit_shiftable:accumulador|mux2x1_1bit:muxRFF2|output~0 ; combout          ;
; |cpu|dp:datapath|rf:Register_File|reg4bits:R1|FFJK:FF2|aux                  ; |cpu|dp:datapath|rf:Register_File|reg4bits:R1|FFJK:FF2|aux                  ; regout           ;
; |cpu|dp:datapath|rf:Register_File|reg4bits:R2|FFJK:FF2|aux                  ; |cpu|dp:datapath|rf:Register_File|reg4bits:R2|FFJK:FF2|aux                  ; regout           ;
; |cpu|dp:datapath|rf:Register_File|reg4bits:R3|FFJK:FF2|aux                  ; |cpu|dp:datapath|rf:Register_File|reg4bits:R3|FFJK:FF2|aux                  ; regout           ;
; |cpu|dp:datapath|rf:Register_File|reg4bits:R0|FFJK:FF2|aux                  ; |cpu|dp:datapath|rf:Register_File|reg4bits:R0|FFJK:FF2|aux                  ; regout           ;
; |cpu|ctrl:controller|imm[2]                                                 ; |cpu|ctrl:controller|imm[2]                                                 ; regout           ;
; |cpu|dp:datapath|rf:Register_File|reg4bits:R2|FFJK:FF3|aux                  ; |cpu|dp:datapath|rf:Register_File|reg4bits:R2|FFJK:FF3|aux                  ; regout           ;
; |cpu|dp:datapath|rf:Register_File|reg4bits:R1|FFJK:FF3|aux                  ; |cpu|dp:datapath|rf:Register_File|reg4bits:R1|FFJK:FF3|aux                  ; regout           ;
; |cpu|dp:datapath|rf:Register_File|reg4bits:R3|FFJK:FF3|aux                  ; |cpu|dp:datapath|rf:Register_File|reg4bits:R3|FFJK:FF3|aux                  ; regout           ;
; |cpu|dp:datapath|rf:Register_File|reg4bits:R0|FFJK:FF3|aux                  ; |cpu|dp:datapath|rf:Register_File|reg4bits:R0|FFJK:FF3|aux                  ; regout           ;
; |cpu|ctrl:controller|imm[3]                                                 ; |cpu|ctrl:controller|imm[3]                                                 ; regout           ;
; |cpu|dp:datapath|reg4bit_shiftable:accumulador|mux2x1_1bit:muxRFF3|output~2 ; |cpu|dp:datapath|reg4bit_shiftable:accumulador|mux2x1_1bit:muxRFF3|output~2 ; combout          ;
; |cpu|dp:datapath|reg4bit_shiftable:accumulador|mux2x1_1bit:muxRFF3|output~3 ; |cpu|dp:datapath|reg4bit_shiftable:accumulador|mux2x1_1bit:muxRFF3|output~3 ; combout          ;
; |cpu|ctrl:controller|state.shfl_state                                       ; |cpu|ctrl:controller|state.shfl_state                                       ; regout           ;
; |cpu|ctrl:controller|state.shfr_state                                       ; |cpu|ctrl:controller|state.shfr_state                                       ; regout           ;
; |cpu|ctrl:controller|state.init                                             ; |cpu|ctrl:controller|state.init                                             ; regout           ;
; |cpu|ctrl:controller|state.done                                             ; |cpu|ctrl:controller|state.done                                             ; regout           ;
; |cpu|ctrl:controller|state.xorr_state                                       ; |cpu|ctrl:controller|state.xorr_state                                       ; regout           ;
; |cpu|ctrl:controller|state.add_state                                        ; |cpu|ctrl:controller|state.add_state                                        ; regout           ;
; |cpu|ctrl:controller|state.andr_state                                       ; |cpu|ctrl:controller|state.andr_state                                       ; regout           ;
; |cpu|ctrl:controller|state.xnorr_state                                      ; |cpu|ctrl:controller|state.xnorr_state                                      ; regout           ;
; |cpu|ctrl:controller|Selector35~0                                           ; |cpu|ctrl:controller|Selector35~0                                           ; combout          ;
; |cpu|ctrl:controller|state.halt_state                                       ; |cpu|ctrl:controller|state.halt_state                                       ; regout           ;
; |cpu|ctrl:controller|state.orr_state                                        ; |cpu|ctrl:controller|state.orr_state                                        ; regout           ;
; |cpu|ctrl:controller|state.nandr_state                                      ; |cpu|ctrl:controller|state.nandr_state                                      ; regout           ;
; |cpu|ctrl:controller|state.inv_state                                        ; |cpu|ctrl:controller|state.inv_state                                        ; regout           ;
; |cpu|ctrl:controller|Selector36~0                                           ; |cpu|ctrl:controller|Selector36~0                                           ; combout          ;
; |cpu|ctrl:controller|Selector32~0                                           ; |cpu|ctrl:controller|Selector32~0                                           ; combout          ;
; |cpu|ctrl:controller|Selector29~0                                           ; |cpu|ctrl:controller|Selector29~0                                           ; combout          ;
; |cpu|ctrl:controller|RF_W_addr[0]                                           ; |cpu|ctrl:controller|RF_W_addr[0]                                           ; regout           ;
; |cpu|ctrl:controller|RF_W_addr[1]                                           ; |cpu|ctrl:controller|RF_W_addr[1]                                           ; regout           ;
; |cpu|ctrl:controller|ADDRESS[3]                                             ; |cpu|ctrl:controller|ADDRESS[3]                                             ; regout           ;
; |cpu|dp:datapath|rf:Register_File|decoder2x4:WR_decoder|output~1            ; |cpu|dp:datapath|rf:Register_File|decoder2x4:WR_decoder|output~1            ; combout          ;
; |cpu|dp:datapath|rf:Register_File|decoder2x4:WR_decoder|output~2            ; |cpu|dp:datapath|rf:Register_File|decoder2x4:WR_decoder|output~2            ; combout          ;
; |cpu|ctrl:controller|Selector37~0                                           ; |cpu|ctrl:controller|Selector37~0                                           ; combout          ;
; |cpu|ctrl:controller|Selector37~1                                           ; |cpu|ctrl:controller|Selector37~1                                           ; combout          ;
; |cpu|ctrl:controller|Selector38~1                                           ; |cpu|ctrl:controller|Selector38~1                                           ; combout          ;
; |cpu|ctrl:controller|Selector36~1                                           ; |cpu|ctrl:controller|Selector36~1                                           ; combout          ;
; |cpu|ctrl:controller|Selector28~0                                           ; |cpu|ctrl:controller|Selector28~0                                           ; combout          ;
; |cpu|ctrl:controller|Mux7~0                                                 ; |cpu|ctrl:controller|Mux7~0                                                 ; combout          ;
; |cpu|ctrl:controller|Mux7~1                                                 ; |cpu|ctrl:controller|Mux7~1                                                 ; combout          ;
; |cpu|ctrl:controller|Mux7~2                                                 ; |cpu|ctrl:controller|Mux7~2                                                 ; combout          ;
; |cpu|ctrl:controller|state.init~0                                           ; |cpu|ctrl:controller|state.init~0                                           ; combout          ;
; |cpu|ctrl:controller|state.done~0                                           ; |cpu|ctrl:controller|state.done~0                                           ; combout          ;
; |cpu|ctrl:controller|Mux7~5                                                 ; |cpu|ctrl:controller|Mux7~5                                                 ; combout          ;
; |cpu|ctrl:controller|state.xorr_state~0                                     ; |cpu|ctrl:controller|state.xorr_state~0                                     ; combout          ;
; |cpu|ctrl:controller|Mux7~7                                                 ; |cpu|ctrl:controller|Mux7~7                                                 ; combout          ;
; |cpu|ctrl:controller|Mux7~9                                                 ; |cpu|ctrl:controller|Mux7~9                                                 ; combout          ;
; |cpu|ctrl:controller|Mux7~10                                                ; |cpu|ctrl:controller|Mux7~10                                                ; combout          ;
; |cpu|ctrl:controller|Mux7~16                                                ; |cpu|ctrl:controller|Mux7~16                                                ; combout          ;
; |cpu|ctrl:controller|Mux7~17                                                ; |cpu|ctrl:controller|Mux7~17                                                ; combout          ;
; |cpu|ctrl:controller|Mux7~20                                                ; |cpu|ctrl:controller|Mux7~20                                                ; combout          ;
; |cpu|ctrl:controller|Mux7~21                                                ; |cpu|ctrl:controller|Mux7~21                                                ; combout          ;
; |cpu|ctrl:controller|Selector3~0                                            ; |cpu|ctrl:controller|Selector3~0                                            ; combout          ;
; |cpu|output[3]                                                              ; |cpu|output[3]                                                              ; padio            ;
; |cpu|OPCdisp0[1]                                                            ; |cpu|OPCdisp0[1]                                                            ; padio            ;
; |cpu|OPCdisp0[2]                                                            ; |cpu|OPCdisp0[2]                                                            ; padio            ;
; |cpu|OPCdisp0[6]                                                            ; |cpu|OPCdisp0[6]                                                            ; padio            ;
; |cpu|OPCdisp1[1]                                                            ; |cpu|OPCdisp1[1]                                                            ; padio            ;
; |cpu|OPCdisp1[2]                                                            ; |cpu|OPCdisp1[2]                                                            ; padio            ;
; |cpu|OPCdisp1[6]                                                            ; |cpu|OPCdisp1[6]                                                            ; padio            ;
; |cpu|OPCdisp2[1]                                                            ; |cpu|OPCdisp2[1]                                                            ; padio            ;
; |cpu|OPCdisp2[2]                                                            ; |cpu|OPCdisp2[2]                                                            ; padio            ;
; |cpu|OPCdisp2[6]                                                            ; |cpu|OPCdisp2[6]                                                            ; padio            ;
; |cpu|OPCdisp3[0]                                                            ; |cpu|OPCdisp3[0]                                                            ; padio            ;
; |cpu|OPCdisp3[1]                                                            ; |cpu|OPCdisp3[1]                                                            ; padio            ;
; |cpu|OPCdisp3[2]                                                            ; |cpu|OPCdisp3[2]                                                            ; padio            ;
; |cpu|OPCdisp3[3]                                                            ; |cpu|OPCdisp3[3]                                                            ; padio            ;
; |cpu|OPCdisp3[4]                                                            ; |cpu|OPCdisp3[4]                                                            ; padio            ;
; |cpu|OPCdisp3[5]                                                            ; |cpu|OPCdisp3[5]                                                            ; padio            ;
; |cpu|OPCdisp3[6]                                                            ; |cpu|OPCdisp3[6]                                                            ; padio            ;
; |cpu|display1[0]                                                            ; |cpu|display1[0]                                                            ; padio            ;
; |cpu|display1[1]                                                            ; |cpu|display1[1]                                                            ; padio            ;
; |cpu|display1[2]                                                            ; |cpu|display1[2]                                                            ; padio            ;
; |cpu|display1[3]                                                            ; |cpu|display1[3]                                                            ; padio            ;
; |cpu|display1[4]                                                            ; |cpu|display1[4]                                                            ; padio            ;
; |cpu|display1[5]                                                            ; |cpu|display1[5]                                                            ; padio            ;
; |cpu|display1[6]                                                            ; |cpu|display1[6]                                                            ; padio            ;
; |cpu|dp:datapath|rf:Register_File|reg4bits:R1|FFJK:FF3|aux~feeder           ; |cpu|dp:datapath|rf:Register_File|reg4bits:R1|FFJK:FF3|aux~feeder           ; combout          ;
; |cpu|dp:datapath|rf:Register_File|reg4bits:R2|FFJK:FF3|aux~feeder           ; |cpu|dp:datapath|rf:Register_File|reg4bits:R2|FFJK:FF3|aux~feeder           ; combout          ;
+-----------------------------------------------------------------------------+-----------------------------------------------------------------------------+------------------+


+---------------------+
; Simulator INI Usage ;
+--------+------------+
; Option ; Usage      ;
+--------+------------+


+--------------------+
; Simulator Messages ;
+--------------------+
Info: *******************************************************************
Info: Running Quartus II 64-Bit Simulator
    Info: Version 13.0.0 Build 156 04/24/2013 SJ Web Edition
    Info: Processing started: Sun Dec 10 17:00:38 2017
Info: Command: quartus_sim --simulation_results_format=VWF processador -c processador
Info (324025): Using vector source file "/home/linksnow/workspace/pR0C3Ss0r/processor 4.0 normal/teste_JMPZ.vwf"
Info (310003): Option to preserve fewer signal transitions to reduce memory requirements is enabled
    Info (310004): Simulation has been partitioned into sub-simulations according to the maximum transition count determined by the engine. Transitions from memory will be flushed out to disk at the end of each sub-simulation to reduce memory requirements.
Info (310002): Simulation partitioned into 1 sub-simulations
Info (328053): Simulation coverage is      62.64 %
Info (328052): Number of transitions in simulation is 2103
Info (324045): Vector file processador.sim.vwf is saved in VWF text format. You can compress it into CVWF format in order to reduce file size. For more details please refer to the Quartus II Help.
Info: Quartus II 64-Bit Simulator was successful. 0 errors, 0 warnings
    Info: Peak virtual memory: 685 megabytes
    Info: Processing ended: Sun Dec 10 17:00:39 2017
    Info: Elapsed time: 00:00:01
    Info: Total CPU time (on all processors): 00:00:00


