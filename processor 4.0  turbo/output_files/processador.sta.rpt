TimeQuest Timing Analyzer report for processador
Sun Dec 10 16:53:12 2017
Quartus II 64-Bit Version 13.0.0 Build 156 04/24/2013 SJ Web Edition


---------------------
; Table of Contents ;
---------------------
  1. Legal Notice
  2. TimeQuest Timing Analyzer Summary
  3. Parallel Compilation
  4. Clocks
  5. Slow Model Fmax Summary
  6. Slow Model Setup Summary
  7. Slow Model Hold Summary
  8. Slow Model Recovery Summary
  9. Slow Model Removal Summary
 10. Slow Model Minimum Pulse Width Summary
 11. Slow Model Setup: 'clk'
 12. Slow Model Hold: 'clk'
 13. Slow Model Minimum Pulse Width: 'clk'
 14. Setup Times
 15. Hold Times
 16. Clock to Output Times
 17. Minimum Clock to Output Times
 18. Fast Model Setup Summary
 19. Fast Model Hold Summary
 20. Fast Model Recovery Summary
 21. Fast Model Removal Summary
 22. Fast Model Minimum Pulse Width Summary
 23. Fast Model Setup: 'clk'
 24. Fast Model Hold: 'clk'
 25. Fast Model Minimum Pulse Width: 'clk'
 26. Setup Times
 27. Hold Times
 28. Clock to Output Times
 29. Minimum Clock to Output Times
 30. Multicorner Timing Analysis Summary
 31. Setup Times
 32. Hold Times
 33. Clock to Output Times
 34. Minimum Clock to Output Times
 35. Setup Transfers
 36. Hold Transfers
 37. Report TCCS
 38. Report RSKM
 39. Unconstrained Paths
 40. TimeQuest Timing Analyzer Messages



----------------
; Legal Notice ;
----------------
Copyright (C) 1991-2013 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.



+-------------------------------------------------------------------------+
; TimeQuest Timing Analyzer Summary                                       ;
+--------------------+----------------------------------------------------+
; Quartus II Version ; Version 13.0.0 Build 156 04/24/2013 SJ Web Edition ;
; Revision Name      ; processador                                        ;
; Device Family      ; Cyclone II                                         ;
; Device Name        ; EP2C35F672C6                                       ;
; Timing Models      ; Final                                              ;
; Delay Model        ; Combined                                           ;
; Rise/Fall Delays   ; Unavailable                                        ;
+--------------------+----------------------------------------------------+


Parallel compilation was disabled, but you have multiple processors available. Enable parallel compilation to reduce compilation time.
+-------------------------------------+
; Parallel Compilation                ;
+----------------------------+--------+
; Processors                 ; Number ;
+----------------------------+--------+
; Number detected on machine ; 4      ;
; Maximum allowed            ; 1      ;
+----------------------------+--------+


+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Clocks                                                                                                                                                                          ;
+------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+---------+
; Clock Name ; Type ; Period ; Frequency  ; Rise  ; Fall  ; Duty Cycle ; Divide by ; Multiply by ; Phase ; Offset ; Edge List ; Edge Shift ; Inverted ; Master ; Source ; Targets ;
+------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+---------+
; clk        ; Base ; 1.000  ; 1000.0 MHz ; 0.000 ; 0.500 ;            ;           ;             ;       ;        ;           ;            ;          ;        ;        ; { clk } ;
+------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+---------+


+-------------------------------------------------+
; Slow Model Fmax Summary                         ;
+-----------+-----------------+------------+------+
; Fmax      ; Restricted Fmax ; Clock Name ; Note ;
+-----------+-----------------+------------+------+
; 422.3 MHz ; 422.3 MHz       ; clk        ;      ;
+-----------+-----------------+------------+------+
This panel reports FMAX for every clock in the design, regardless of the user-specified clock periods.  FMAX is only computed for paths where the source and destination registers or ports are driven by the same clock.  Paths of different clocks, including generated clocks, are ignored.  For paths between a clock and its inversion, FMAX is computed as if the rising and falling edges are scaled along with FMAX, such that the duty cycle (in terms of a percentage) is maintained. Altera recommends that you always use clock constraints and other slack reports for sign-off analysis.


+--------------------------------+
; Slow Model Setup Summary       ;
+-------+--------+---------------+
; Clock ; Slack  ; End Point TNS ;
+-------+--------+---------------+
; clk   ; -1.368 ; -15.688       ;
+-------+--------+---------------+


+-------------------------------+
; Slow Model Hold Summary       ;
+-------+-------+---------------+
; Clock ; Slack ; End Point TNS ;
+-------+-------+---------------+
; clk   ; 0.220 ; 0.000         ;
+-------+-------+---------------+


-------------------------------
; Slow Model Recovery Summary ;
-------------------------------
No paths to report.


------------------------------
; Slow Model Removal Summary ;
------------------------------
No paths to report.


+----------------------------------------+
; Slow Model Minimum Pulse Width Summary ;
+-------+--------+-----------------------+
; Clock ; Slack  ; End Point TNS         ;
+-------+--------+-----------------------+
; clk   ; -1.222 ; -22.222               ;
+-------+--------+-----------------------+


+--------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Setup: 'clk'                                                                                                                                      ;
+--------+---------------------------------------+---------------------------------------+--------------+-------------+--------------+------------+------------+
; Slack  ; From Node                             ; To Node                               ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+---------------------------------------+---------------------------------------+--------------+-------------+--------------+------------+------------+
; -1.368 ; ctrl:controller|OPCODE[2]             ; ctrl:controller|PC[3]                 ; clk          ; clk         ; 1.000        ; 0.255      ; 2.659      ;
; -1.331 ; ctrl:controller|PC[3]                 ; ctrl:controller|PC[3]                 ; clk          ; clk         ; 1.000        ; 0.000      ; 2.367      ;
; -1.326 ; ctrl:controller|PC[2]                 ; ctrl:controller|PC[3]                 ; clk          ; clk         ; 1.000        ; 0.000      ; 2.362      ;
; -1.255 ; ctrl:controller|OPCODE[2]             ; ctrl:controller|PC[2]                 ; clk          ; clk         ; 1.000        ; 0.255      ; 2.546      ;
; -1.253 ; ctrl:controller|OPCODE[2]             ; ctrl:controller|PC[1]                 ; clk          ; clk         ; 1.000        ; 0.255      ; 2.544      ;
; -1.216 ; ctrl:controller|OPCODE[2]             ; ctrl:controller|PC[0]                 ; clk          ; clk         ; 1.000        ; 0.044      ; 2.296      ;
; -1.202 ; ctrl:controller|PC[2]                 ; ctrl:controller|PC[2]                 ; clk          ; clk         ; 1.000        ; 0.000      ; 2.238      ;
; -1.164 ; ctrl:controller|PC[1]                 ; ctrl:controller|PC[3]                 ; clk          ; clk         ; 1.000        ; 0.000      ; 2.200      ;
; -1.083 ; ctrl:controller|OPCODE[3]             ; ctrl:controller|PC[3]                 ; clk          ; clk         ; 1.000        ; 0.255      ; 2.374      ;
; -1.074 ; ctrl:controller|PC[0]                 ; ctrl:controller|PC[3]                 ; clk          ; clk         ; 1.000        ; 0.211      ; 2.321      ;
; -1.040 ; ctrl:controller|PC[1]                 ; ctrl:controller|PC[2]                 ; clk          ; clk         ; 1.000        ; 0.000      ; 2.076      ;
; -1.029 ; ctrl:controller|ADDRESS[1]            ; ctrl:controller|PC[3]                 ; clk          ; clk         ; 1.000        ; -0.002     ; 2.063      ;
; -1.029 ; ctrl:controller|ADDRESS[0]            ; ctrl:controller|PC[3]                 ; clk          ; clk         ; 1.000        ; -0.002     ; 2.063      ;
; -0.980 ; ctrl:controller|OPCODE[0]             ; ctrl:controller|PC[3]                 ; clk          ; clk         ; 1.000        ; 0.255      ; 2.271      ;
; -0.971 ; ctrl:controller|OPCODE[0]             ; ctrl:controller|now_inst[0]           ; clk          ; clk         ; 1.000        ; 0.314      ; 2.321      ;
; -0.971 ; ctrl:controller|OPCODE[0]             ; ctrl:controller|now_inst[1]           ; clk          ; clk         ; 1.000        ; 0.314      ; 2.321      ;
; -0.971 ; ctrl:controller|OPCODE[0]             ; ctrl:controller|now_inst[2]           ; clk          ; clk         ; 1.000        ; 0.314      ; 2.321      ;
; -0.971 ; ctrl:controller|OPCODE[0]             ; ctrl:controller|now_inst[3]           ; clk          ; clk         ; 1.000        ; 0.314      ; 2.321      ;
; -0.970 ; ctrl:controller|OPCODE[3]             ; ctrl:controller|PC[2]                 ; clk          ; clk         ; 1.000        ; 0.255      ; 2.261      ;
; -0.968 ; ctrl:controller|OPCODE[3]             ; ctrl:controller|PC[1]                 ; clk          ; clk         ; 1.000        ; 0.255      ; 2.259      ;
; -0.967 ; ctrl:controller|PC[1]                 ; ctrl:controller|PC[1]                 ; clk          ; clk         ; 1.000        ; 0.000      ; 2.003      ;
; -0.949 ; ctrl:controller|PC[0]                 ; ctrl:controller|PC[2]                 ; clk          ; clk         ; 1.000        ; 0.211      ; 2.196      ;
; -0.939 ; ctrl:controller|ADDRESS[0]            ; ctrl:controller|PC[0]                 ; clk          ; clk         ; 1.000        ; -0.213     ; 1.762      ;
; -0.937 ; ctrl:controller|OPCODE[2]             ; ctrl:controller|now_inst[0]           ; clk          ; clk         ; 1.000        ; 0.314      ; 2.287      ;
; -0.937 ; ctrl:controller|OPCODE[2]             ; ctrl:controller|now_inst[1]           ; clk          ; clk         ; 1.000        ; 0.314      ; 2.287      ;
; -0.937 ; ctrl:controller|OPCODE[2]             ; ctrl:controller|now_inst[2]           ; clk          ; clk         ; 1.000        ; 0.314      ; 2.287      ;
; -0.937 ; ctrl:controller|OPCODE[2]             ; ctrl:controller|now_inst[3]           ; clk          ; clk         ; 1.000        ; 0.314      ; 2.287      ;
; -0.931 ; ctrl:controller|OPCODE[3]             ; ctrl:controller|PC[0]                 ; clk          ; clk         ; 1.000        ; 0.044      ; 2.011      ;
; -0.921 ; ctrl:controller|state.Decod           ; ctrl:controller|PC[3]                 ; clk          ; clk         ; 1.000        ; 0.211      ; 2.168      ;
; -0.867 ; ctrl:controller|OPCODE[0]             ; ctrl:controller|PC[2]                 ; clk          ; clk         ; 1.000        ; 0.255      ; 2.158      ;
; -0.865 ; ctrl:controller|OPCODE[0]             ; ctrl:controller|PC[1]                 ; clk          ; clk         ; 1.000        ; 0.255      ; 2.156      ;
; -0.830 ; ctrl:controller|OPCODE[1]             ; ctrl:controller|PC[3]                 ; clk          ; clk         ; 1.000        ; 0.255      ; 2.121      ;
; -0.828 ; ctrl:controller|OPCODE[0]             ; ctrl:controller|PC[0]                 ; clk          ; clk         ; 1.000        ; 0.044      ; 1.908      ;
; -0.802 ; ctrl:controller|OPCODE[3]             ; ctrl:controller|now_inst[0]           ; clk          ; clk         ; 1.000        ; 0.314      ; 2.152      ;
; -0.802 ; ctrl:controller|OPCODE[3]             ; ctrl:controller|now_inst[1]           ; clk          ; clk         ; 1.000        ; 0.314      ; 2.152      ;
; -0.802 ; ctrl:controller|OPCODE[3]             ; ctrl:controller|now_inst[2]           ; clk          ; clk         ; 1.000        ; 0.314      ; 2.152      ;
; -0.802 ; ctrl:controller|OPCODE[3]             ; ctrl:controller|now_inst[3]           ; clk          ; clk         ; 1.000        ; 0.314      ; 2.152      ;
; -0.800 ; ctrl:controller|state.Decod           ; ctrl:controller|PC[2]                 ; clk          ; clk         ; 1.000        ; 0.211      ; 2.047      ;
; -0.785 ; ctrl:controller|ADDRESS[0]            ; ctrl:controller|PC[1]                 ; clk          ; clk         ; 1.000        ; -0.002     ; 1.819      ;
; -0.784 ; ctrl:controller|state.Decod           ; ctrl:controller|PC[0]                 ; clk          ; clk         ; 1.000        ; 0.000      ; 1.820      ;
; -0.778 ; ctrl:controller|OPCODE[3]             ; ctrl:controller|state.fetch           ; clk          ; clk         ; 1.000        ; 0.044      ; 1.858      ;
; -0.777 ; ctrl:controller|ADDRESS[1]            ; ctrl:controller|PC[2]                 ; clk          ; clk         ; 1.000        ; -0.002     ; 1.811      ;
; -0.777 ; ctrl:controller|ADDRESS[0]            ; ctrl:controller|PC[2]                 ; clk          ; clk         ; 1.000        ; -0.002     ; 1.811      ;
; -0.771 ; ctrl:controller|PC[3]                 ; ctrl:controller|OPCODE[0]             ; clk          ; clk         ; 1.000        ; -0.255     ; 1.552      ;
; -0.771 ; ctrl:controller|state.jmp_if_zero_jmp ; ctrl:controller|PC[3]                 ; clk          ; clk         ; 1.000        ; 0.211      ; 2.018      ;
; -0.770 ; ctrl:controller|PC[3]                 ; ctrl:controller|OPCODE[3]             ; clk          ; clk         ; 1.000        ; -0.255     ; 1.551      ;
; -0.729 ; ctrl:controller|PC[3]                 ; ctrl:controller|OPCODE[1]             ; clk          ; clk         ; 1.000        ; -0.255     ; 1.510      ;
; -0.729 ; ctrl:controller|state.Decod           ; ctrl:controller|now_inst[0]           ; clk          ; clk         ; 1.000        ; 0.270      ; 2.035      ;
; -0.729 ; ctrl:controller|state.Decod           ; ctrl:controller|now_inst[1]           ; clk          ; clk         ; 1.000        ; 0.270      ; 2.035      ;
; -0.729 ; ctrl:controller|state.Decod           ; ctrl:controller|now_inst[2]           ; clk          ; clk         ; 1.000        ; 0.270      ; 2.035      ;
; -0.729 ; ctrl:controller|state.Decod           ; ctrl:controller|now_inst[3]           ; clk          ; clk         ; 1.000        ; 0.270      ; 2.035      ;
; -0.726 ; ctrl:controller|PC[0]                 ; ctrl:controller|PC[0]                 ; clk          ; clk         ; 1.000        ; 0.000      ; 1.762      ;
; -0.717 ; ctrl:controller|OPCODE[1]             ; ctrl:controller|PC[2]                 ; clk          ; clk         ; 1.000        ; 0.255      ; 2.008      ;
; -0.716 ; ctrl:controller|ADDRESS[3]            ; ctrl:controller|PC[3]                 ; clk          ; clk         ; 1.000        ; 0.223      ; 1.975      ;
; -0.715 ; ctrl:controller|OPCODE[1]             ; ctrl:controller|PC[1]                 ; clk          ; clk         ; 1.000        ; 0.255      ; 2.006      ;
; -0.713 ; ctrl:controller|state.fetch           ; ctrl:controller|PC[3]                 ; clk          ; clk         ; 1.000        ; 0.211      ; 1.960      ;
; -0.713 ; ctrl:controller|state.fetch           ; ctrl:controller|PC[1]                 ; clk          ; clk         ; 1.000        ; 0.211      ; 1.960      ;
; -0.713 ; ctrl:controller|state.fetch           ; ctrl:controller|PC[2]                 ; clk          ; clk         ; 1.000        ; 0.211      ; 1.960      ;
; -0.701 ; ctrl:controller|PC[2]                 ; ctrl:controller|ADDRESS[2]            ; clk          ; clk         ; 1.000        ; -0.223     ; 1.514      ;
; -0.678 ; ctrl:controller|OPCODE[1]             ; ctrl:controller|PC[0]                 ; clk          ; clk         ; 1.000        ; 0.044      ; 1.758      ;
; -0.677 ; ctrl:controller|OPCODE[3]             ; ctrl:controller|state.done            ; clk          ; clk         ; 1.000        ; 0.044      ; 1.757      ;
; -0.676 ; ctrl:controller|OPCODE[3]             ; ctrl:controller|state.jmp_if_zero_jmp ; clk          ; clk         ; 1.000        ; 0.044      ; 1.756      ;
; -0.669 ; ctrl:controller|OPCODE[1]             ; ctrl:controller|state.fetch           ; clk          ; clk         ; 1.000        ; 0.044      ; 1.749      ;
; -0.650 ; ctrl:controller|state.jmp_if_zero_jmp ; ctrl:controller|PC[2]                 ; clk          ; clk         ; 1.000        ; 0.211      ; 1.897      ;
; -0.650 ; ctrl:controller|OPCODE[0]             ; ctrl:controller|state.fetch           ; clk          ; clk         ; 1.000        ; 0.044      ; 1.730      ;
; -0.648 ; ctrl:controller|OPCODE[1]             ; ctrl:controller|now_inst[0]           ; clk          ; clk         ; 1.000        ; 0.314      ; 1.998      ;
; -0.648 ; ctrl:controller|OPCODE[1]             ; ctrl:controller|now_inst[1]           ; clk          ; clk         ; 1.000        ; 0.314      ; 1.998      ;
; -0.648 ; ctrl:controller|OPCODE[1]             ; ctrl:controller|now_inst[2]           ; clk          ; clk         ; 1.000        ; 0.314      ; 1.998      ;
; -0.648 ; ctrl:controller|OPCODE[1]             ; ctrl:controller|now_inst[3]           ; clk          ; clk         ; 1.000        ; 0.314      ; 1.998      ;
; -0.621 ; ctrl:controller|state.fetch           ; ctrl:controller|OPCODE[2]             ; clk          ; clk         ; 1.000        ; -0.044     ; 1.613      ;
; -0.621 ; ctrl:controller|state.fetch           ; ctrl:controller|OPCODE[3]             ; clk          ; clk         ; 1.000        ; -0.044     ; 1.613      ;
; -0.621 ; ctrl:controller|state.fetch           ; ctrl:controller|OPCODE[0]             ; clk          ; clk         ; 1.000        ; -0.044     ; 1.613      ;
; -0.621 ; ctrl:controller|state.fetch           ; ctrl:controller|OPCODE[1]             ; clk          ; clk         ; 1.000        ; -0.044     ; 1.613      ;
; -0.617 ; ctrl:controller|state.Decod           ; ctrl:controller|state.fetch           ; clk          ; clk         ; 1.000        ; 0.000      ; 1.653      ;
; -0.607 ; ctrl:controller|ADDRESS[1]            ; ctrl:controller|PC[1]                 ; clk          ; clk         ; 1.000        ; -0.002     ; 1.641      ;
; -0.604 ; ctrl:controller|state.fetch           ; ctrl:controller|PC[0]                 ; clk          ; clk         ; 1.000        ; 0.000      ; 1.640      ;
; -0.597 ; ctrl:controller|ADDRESS[2]            ; ctrl:controller|PC[2]                 ; clk          ; clk         ; 1.000        ; 0.223      ; 1.856      ;
; -0.587 ; ctrl:controller|state.fetch           ; ctrl:controller|ADDRESS[3]            ; clk          ; clk         ; 1.000        ; -0.012     ; 1.611      ;
; -0.587 ; ctrl:controller|state.fetch           ; ctrl:controller|ADDRESS[2]            ; clk          ; clk         ; 1.000        ; -0.012     ; 1.611      ;
; -0.586 ; ctrl:controller|PC[1]                 ; ctrl:controller|OPCODE[2]             ; clk          ; clk         ; 1.000        ; -0.255     ; 1.367      ;
; -0.586 ; ctrl:controller|PC[1]                 ; ctrl:controller|OPCODE[0]             ; clk          ; clk         ; 1.000        ; -0.255     ; 1.367      ;
; -0.585 ; ctrl:controller|PC[1]                 ; ctrl:controller|OPCODE[3]             ; clk          ; clk         ; 1.000        ; -0.255     ; 1.366      ;
; -0.585 ; ctrl:controller|PC[1]                 ; ctrl:controller|OPCODE[1]             ; clk          ; clk         ; 1.000        ; -0.255     ; 1.366      ;
; -0.550 ; ctrl:controller|OPCODE[0]             ; ctrl:controller|state.done            ; clk          ; clk         ; 1.000        ; 0.044      ; 1.630      ;
; -0.549 ; ctrl:controller|OPCODE[0]             ; ctrl:controller|state.jmp_if_zero_jmp ; clk          ; clk         ; 1.000        ; 0.044      ; 1.629      ;
; -0.540 ; ctrl:controller|state.done            ; ctrl:controller|PC[3]                 ; clk          ; clk         ; 1.000        ; 0.211      ; 1.787      ;
; -0.540 ; ctrl:controller|state.done            ; ctrl:controller|PC[1]                 ; clk          ; clk         ; 1.000        ; 0.211      ; 1.787      ;
; -0.540 ; ctrl:controller|state.done            ; ctrl:controller|PC[2]                 ; clk          ; clk         ; 1.000        ; 0.211      ; 1.787      ;
; -0.535 ; ctrl:controller|PC[0]                 ; ctrl:controller|PC[1]                 ; clk          ; clk         ; 1.000        ; 0.211      ; 1.782      ;
; -0.517 ; ctrl:controller|OPCODE[1]             ; ctrl:controller|state.done            ; clk          ; clk         ; 1.000        ; 0.044      ; 1.597      ;
; -0.516 ; ctrl:controller|OPCODE[1]             ; ctrl:controller|state.jmp_if_zero_jmp ; clk          ; clk         ; 1.000        ; 0.044      ; 1.596      ;
; -0.505 ; ctrl:controller|PC[3]                 ; ctrl:controller|ADDRESS[2]            ; clk          ; clk         ; 1.000        ; -0.223     ; 1.318      ;
; -0.495 ; ctrl:controller|state.Decod           ; ctrl:controller|state.done            ; clk          ; clk         ; 1.000        ; 0.000      ; 1.531      ;
; -0.494 ; ctrl:controller|state.Decod           ; ctrl:controller|state.jmp_if_zero_jmp ; clk          ; clk         ; 1.000        ; 0.000      ; 1.530      ;
; -0.459 ; ctrl:controller|PC[2]                 ; ctrl:controller|OPCODE[0]             ; clk          ; clk         ; 1.000        ; -0.255     ; 1.240      ;
; -0.459 ; ctrl:controller|PC[2]                 ; ctrl:controller|OPCODE[1]             ; clk          ; clk         ; 1.000        ; -0.255     ; 1.240      ;
; -0.458 ; ctrl:controller|state.jmp_if_zero_jmp ; ctrl:controller|PC[0]                 ; clk          ; clk         ; 1.000        ; 0.000      ; 1.494      ;
; -0.458 ; ctrl:controller|PC[2]                 ; ctrl:controller|OPCODE[2]             ; clk          ; clk         ; 1.000        ; -0.255     ; 1.239      ;
; -0.457 ; ctrl:controller|PC[2]                 ; ctrl:controller|OPCODE[3]             ; clk          ; clk         ; 1.000        ; -0.255     ; 1.238      ;
; -0.452 ; ctrl:controller|PC[0]                 ; ctrl:controller|ADDRESS[2]            ; clk          ; clk         ; 1.000        ; -0.012     ; 1.476      ;
+--------+---------------------------------------+---------------------------------------+--------------+-------------+--------------+------------+------------+


+-------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Hold: 'clk'                                                                                                                                      ;
+-------+---------------------------------------+---------------------------------------+--------------+-------------+--------------+------------+------------+
; Slack ; From Node                             ; To Node                               ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+-------+---------------------------------------+---------------------------------------+--------------+-------------+--------------+------------+------------+
; 0.220 ; ctrl:controller|OPCODE[1]             ; ctrl:controller|now_inst[1]           ; clk          ; clk         ; 0.000        ; 0.314      ; 0.800      ;
; 0.231 ; ctrl:controller|OPCODE[2]             ; ctrl:controller|now_inst[0]           ; clk          ; clk         ; 0.000        ; 0.314      ; 0.811      ;
; 0.371 ; ctrl:controller|OPCODE[3]             ; ctrl:controller|now_inst[0]           ; clk          ; clk         ; 0.000        ; 0.314      ; 0.951      ;
; 0.372 ; ctrl:controller|OPCODE[3]             ; ctrl:controller|now_inst[1]           ; clk          ; clk         ; 0.000        ; 0.314      ; 0.952      ;
; 0.378 ; ctrl:controller|OPCODE[3]             ; ctrl:controller|now_inst[3]           ; clk          ; clk         ; 0.000        ; 0.314      ; 0.958      ;
; 0.391 ; ctrl:controller|state.init            ; ctrl:controller|state.init            ; clk          ; clk         ; 0.000        ; 0.000      ; 0.657      ;
; 0.391 ; ctrl:controller|PC[0]                 ; ctrl:controller|PC[0]                 ; clk          ; clk         ; 0.000        ; 0.000      ; 0.657      ;
; 0.391 ; ctrl:controller|state.done            ; ctrl:controller|state.done            ; clk          ; clk         ; 0.000        ; 0.000      ; 0.657      ;
; 0.475 ; ctrl:controller|OPCODE[2]             ; ctrl:controller|now_inst[1]           ; clk          ; clk         ; 0.000        ; 0.314      ; 1.055      ;
; 0.540 ; ctrl:controller|OPCODE[0]             ; ctrl:controller|now_inst[0]           ; clk          ; clk         ; 0.000        ; 0.314      ; 1.120      ;
; 0.596 ; ctrl:controller|PC[0]                 ; ctrl:controller|ADDRESS[1]            ; clk          ; clk         ; 0.000        ; 0.213      ; 1.075      ;
; 0.600 ; ctrl:controller|PC[0]                 ; ctrl:controller|ADDRESS[0]            ; clk          ; clk         ; 0.000        ; 0.213      ; 1.079      ;
; 0.651 ; ctrl:controller|state.init            ; ctrl:controller|state.fetch           ; clk          ; clk         ; 0.000        ; 0.270      ; 1.187      ;
; 0.655 ; ctrl:controller|state.Decod           ; ctrl:controller|PC[1]                 ; clk          ; clk         ; 0.000        ; 0.211      ; 1.132      ;
; 0.697 ; ctrl:controller|PC[1]                 ; ctrl:controller|ADDRESS[0]            ; clk          ; clk         ; 0.000        ; 0.002      ; 0.965      ;
; 0.698 ; ctrl:controller|state.fetch           ; ctrl:controller|state.Decod           ; clk          ; clk         ; 0.000        ; 0.000      ; 0.964      ;
; 0.760 ; ctrl:controller|OPCODE[2]             ; ctrl:controller|now_inst[2]           ; clk          ; clk         ; 0.000        ; 0.314      ; 1.340      ;
; 0.824 ; ctrl:controller|state.jmp_if_zero_jmp ; ctrl:controller|state.fetch           ; clk          ; clk         ; 0.000        ; 0.000      ; 1.090      ;
; 0.826 ; ctrl:controller|state.jmp_if_zero_jmp ; ctrl:controller|PC[2]                 ; clk          ; clk         ; 0.000        ; 0.211      ; 1.303      ;
; 0.826 ; ctrl:controller|PC[2]                 ; ctrl:controller|ADDRESS[0]            ; clk          ; clk         ; 0.000        ; 0.002      ; 1.094      ;
; 0.828 ; ctrl:controller|state.jmp_if_zero_jmp ; ctrl:controller|PC[3]                 ; clk          ; clk         ; 0.000        ; 0.211      ; 1.305      ;
; 0.828 ; ctrl:controller|state.jmp_if_zero_jmp ; ctrl:controller|PC[1]                 ; clk          ; clk         ; 0.000        ; 0.211      ; 1.305      ;
; 0.852 ; ctrl:controller|PC[2]                 ; ctrl:controller|ADDRESS[1]            ; clk          ; clk         ; 0.000        ; 0.002      ; 1.120      ;
; 0.861 ; ctrl:controller|PC[3]                 ; ctrl:controller|ADDRESS[1]            ; clk          ; clk         ; 0.000        ; 0.002      ; 1.129      ;
; 0.971 ; ctrl:controller|state.fetch           ; ctrl:controller|ADDRESS[0]            ; clk          ; clk         ; 0.000        ; 0.213      ; 1.450      ;
; 0.971 ; ctrl:controller|state.fetch           ; ctrl:controller|ADDRESS[1]            ; clk          ; clk         ; 0.000        ; 0.213      ; 1.450      ;
; 1.035 ; ctrl:controller|OPCODE[2]             ; ctrl:controller|state.jmp_if_zero_jmp ; clk          ; clk         ; 0.000        ; 0.044      ; 1.345      ;
; 1.035 ; ctrl:controller|PC[0]                 ; ctrl:controller|OPCODE[3]             ; clk          ; clk         ; 0.000        ; -0.044     ; 1.257      ;
; 1.041 ; ctrl:controller|PC[0]                 ; ctrl:controller|OPCODE[1]             ; clk          ; clk         ; 0.000        ; -0.044     ; 1.263      ;
; 1.063 ; ctrl:controller|ADDRESS[1]            ; ctrl:controller|PC[1]                 ; clk          ; clk         ; 0.000        ; -0.002     ; 1.327      ;
; 1.069 ; ctrl:controller|PC[0]                 ; ctrl:controller|OPCODE[2]             ; clk          ; clk         ; 0.000        ; -0.044     ; 1.291      ;
; 1.070 ; ctrl:controller|PC[0]                 ; ctrl:controller|OPCODE[0]             ; clk          ; clk         ; 0.000        ; -0.044     ; 1.292      ;
; 1.130 ; ctrl:controller|PC[0]                 ; ctrl:controller|PC[2]                 ; clk          ; clk         ; 0.000        ; 0.211      ; 1.607      ;
; 1.165 ; ctrl:controller|PC[3]                 ; ctrl:controller|ADDRESS[3]            ; clk          ; clk         ; 0.000        ; -0.223     ; 1.208      ;
; 1.170 ; ctrl:controller|PC[1]                 ; ctrl:controller|ADDRESS[2]            ; clk          ; clk         ; 0.000        ; -0.223     ; 1.213      ;
; 1.201 ; ctrl:controller|state.done            ; ctrl:controller|PC[0]                 ; clk          ; clk         ; 0.000        ; 0.000      ; 1.467      ;
; 1.216 ; ctrl:controller|OPCODE[2]             ; ctrl:controller|state.done            ; clk          ; clk         ; 0.000        ; 0.044      ; 1.526      ;
; 1.219 ; ctrl:controller|ADDRESS[0]            ; ctrl:controller|PC[3]                 ; clk          ; clk         ; 0.000        ; -0.002     ; 1.483      ;
; 1.222 ; ctrl:controller|PC[0]                 ; ctrl:controller|ADDRESS[2]            ; clk          ; clk         ; 0.000        ; -0.012     ; 1.476      ;
; 1.227 ; ctrl:controller|PC[2]                 ; ctrl:controller|OPCODE[3]             ; clk          ; clk         ; 0.000        ; -0.255     ; 1.238      ;
; 1.228 ; ctrl:controller|state.jmp_if_zero_jmp ; ctrl:controller|PC[0]                 ; clk          ; clk         ; 0.000        ; 0.000      ; 1.494      ;
; 1.228 ; ctrl:controller|PC[2]                 ; ctrl:controller|OPCODE[2]             ; clk          ; clk         ; 0.000        ; -0.255     ; 1.239      ;
; 1.229 ; ctrl:controller|PC[2]                 ; ctrl:controller|OPCODE[1]             ; clk          ; clk         ; 0.000        ; -0.255     ; 1.240      ;
; 1.229 ; ctrl:controller|PC[2]                 ; ctrl:controller|OPCODE[0]             ; clk          ; clk         ; 0.000        ; -0.255     ; 1.240      ;
; 1.237 ; ctrl:controller|PC[1]                 ; ctrl:controller|PC[2]                 ; clk          ; clk         ; 0.000        ; 0.000      ; 1.503      ;
; 1.259 ; ctrl:controller|PC[0]                 ; ctrl:controller|PC[1]                 ; clk          ; clk         ; 0.000        ; 0.211      ; 1.736      ;
; 1.264 ; ctrl:controller|state.Decod           ; ctrl:controller|state.jmp_if_zero_jmp ; clk          ; clk         ; 0.000        ; 0.000      ; 1.530      ;
; 1.265 ; ctrl:controller|state.Decod           ; ctrl:controller|state.done            ; clk          ; clk         ; 0.000        ; 0.000      ; 1.531      ;
; 1.275 ; ctrl:controller|PC[3]                 ; ctrl:controller|ADDRESS[2]            ; clk          ; clk         ; 0.000        ; -0.223     ; 1.318      ;
; 1.286 ; ctrl:controller|OPCODE[1]             ; ctrl:controller|state.jmp_if_zero_jmp ; clk          ; clk         ; 0.000        ; 0.044      ; 1.596      ;
; 1.287 ; ctrl:controller|OPCODE[1]             ; ctrl:controller|state.done            ; clk          ; clk         ; 0.000        ; 0.044      ; 1.597      ;
; 1.310 ; ctrl:controller|state.done            ; ctrl:controller|PC[3]                 ; clk          ; clk         ; 0.000        ; 0.211      ; 1.787      ;
; 1.310 ; ctrl:controller|state.done            ; ctrl:controller|PC[1]                 ; clk          ; clk         ; 0.000        ; 0.211      ; 1.787      ;
; 1.310 ; ctrl:controller|state.done            ; ctrl:controller|PC[2]                 ; clk          ; clk         ; 0.000        ; 0.211      ; 1.787      ;
; 1.319 ; ctrl:controller|OPCODE[0]             ; ctrl:controller|state.jmp_if_zero_jmp ; clk          ; clk         ; 0.000        ; 0.044      ; 1.629      ;
; 1.320 ; ctrl:controller|OPCODE[0]             ; ctrl:controller|state.done            ; clk          ; clk         ; 0.000        ; 0.044      ; 1.630      ;
; 1.355 ; ctrl:controller|PC[1]                 ; ctrl:controller|OPCODE[3]             ; clk          ; clk         ; 0.000        ; -0.255     ; 1.366      ;
; 1.355 ; ctrl:controller|PC[1]                 ; ctrl:controller|OPCODE[1]             ; clk          ; clk         ; 0.000        ; -0.255     ; 1.366      ;
; 1.356 ; ctrl:controller|PC[1]                 ; ctrl:controller|OPCODE[2]             ; clk          ; clk         ; 0.000        ; -0.255     ; 1.367      ;
; 1.356 ; ctrl:controller|PC[1]                 ; ctrl:controller|OPCODE[0]             ; clk          ; clk         ; 0.000        ; -0.255     ; 1.367      ;
; 1.357 ; ctrl:controller|state.fetch           ; ctrl:controller|ADDRESS[3]            ; clk          ; clk         ; 0.000        ; -0.012     ; 1.611      ;
; 1.357 ; ctrl:controller|state.fetch           ; ctrl:controller|ADDRESS[2]            ; clk          ; clk         ; 0.000        ; -0.012     ; 1.611      ;
; 1.367 ; ctrl:controller|ADDRESS[2]            ; ctrl:controller|PC[2]                 ; clk          ; clk         ; 0.000        ; 0.223      ; 1.856      ;
; 1.374 ; ctrl:controller|state.fetch           ; ctrl:controller|PC[0]                 ; clk          ; clk         ; 0.000        ; 0.000      ; 1.640      ;
; 1.387 ; ctrl:controller|state.Decod           ; ctrl:controller|state.fetch           ; clk          ; clk         ; 0.000        ; 0.000      ; 1.653      ;
; 1.388 ; ctrl:controller|ADDRESS[0]            ; ctrl:controller|PC[2]                 ; clk          ; clk         ; 0.000        ; -0.002     ; 1.652      ;
; 1.391 ; ctrl:controller|state.fetch           ; ctrl:controller|OPCODE[2]             ; clk          ; clk         ; 0.000        ; -0.044     ; 1.613      ;
; 1.391 ; ctrl:controller|state.fetch           ; ctrl:controller|OPCODE[3]             ; clk          ; clk         ; 0.000        ; -0.044     ; 1.613      ;
; 1.391 ; ctrl:controller|state.fetch           ; ctrl:controller|OPCODE[0]             ; clk          ; clk         ; 0.000        ; -0.044     ; 1.613      ;
; 1.391 ; ctrl:controller|state.fetch           ; ctrl:controller|OPCODE[1]             ; clk          ; clk         ; 0.000        ; -0.044     ; 1.613      ;
; 1.418 ; ctrl:controller|OPCODE[1]             ; ctrl:controller|now_inst[0]           ; clk          ; clk         ; 0.000        ; 0.314      ; 1.998      ;
; 1.418 ; ctrl:controller|OPCODE[1]             ; ctrl:controller|now_inst[2]           ; clk          ; clk         ; 0.000        ; 0.314      ; 1.998      ;
; 1.418 ; ctrl:controller|OPCODE[1]             ; ctrl:controller|now_inst[3]           ; clk          ; clk         ; 0.000        ; 0.314      ; 1.998      ;
; 1.418 ; ctrl:controller|PC[0]                 ; ctrl:controller|PC[3]                 ; clk          ; clk         ; 0.000        ; 0.211      ; 1.895      ;
; 1.419 ; ctrl:controller|ADDRESS[0]            ; ctrl:controller|PC[0]                 ; clk          ; clk         ; 0.000        ; -0.213     ; 1.472      ;
; 1.420 ; ctrl:controller|PC[2]                 ; ctrl:controller|PC[3]                 ; clk          ; clk         ; 0.000        ; 0.000      ; 1.686      ;
; 1.420 ; ctrl:controller|OPCODE[0]             ; ctrl:controller|state.fetch           ; clk          ; clk         ; 0.000        ; 0.044      ; 1.730      ;
; 1.430 ; ctrl:controller|PC[1]                 ; ctrl:controller|PC[1]                 ; clk          ; clk         ; 0.000        ; 0.000      ; 1.696      ;
; 1.439 ; ctrl:controller|OPCODE[1]             ; ctrl:controller|state.fetch           ; clk          ; clk         ; 0.000        ; 0.044      ; 1.749      ;
; 1.446 ; ctrl:controller|OPCODE[3]             ; ctrl:controller|state.jmp_if_zero_jmp ; clk          ; clk         ; 0.000        ; 0.044      ; 1.756      ;
; 1.447 ; ctrl:controller|OPCODE[3]             ; ctrl:controller|state.done            ; clk          ; clk         ; 0.000        ; 0.044      ; 1.757      ;
; 1.448 ; ctrl:controller|OPCODE[1]             ; ctrl:controller|PC[0]                 ; clk          ; clk         ; 0.000        ; 0.044      ; 1.758      ;
; 1.471 ; ctrl:controller|PC[2]                 ; ctrl:controller|ADDRESS[2]            ; clk          ; clk         ; 0.000        ; -0.223     ; 1.514      ;
; 1.483 ; ctrl:controller|state.fetch           ; ctrl:controller|PC[3]                 ; clk          ; clk         ; 0.000        ; 0.211      ; 1.960      ;
; 1.483 ; ctrl:controller|state.fetch           ; ctrl:controller|PC[1]                 ; clk          ; clk         ; 0.000        ; 0.211      ; 1.960      ;
; 1.483 ; ctrl:controller|state.fetch           ; ctrl:controller|PC[2]                 ; clk          ; clk         ; 0.000        ; 0.211      ; 1.960      ;
; 1.485 ; ctrl:controller|OPCODE[1]             ; ctrl:controller|PC[1]                 ; clk          ; clk         ; 0.000        ; 0.255      ; 2.006      ;
; 1.486 ; ctrl:controller|ADDRESS[3]            ; ctrl:controller|PC[3]                 ; clk          ; clk         ; 0.000        ; 0.223      ; 1.975      ;
; 1.487 ; ctrl:controller|OPCODE[1]             ; ctrl:controller|PC[2]                 ; clk          ; clk         ; 0.000        ; 0.255      ; 2.008      ;
; 1.499 ; ctrl:controller|PC[3]                 ; ctrl:controller|OPCODE[1]             ; clk          ; clk         ; 0.000        ; -0.255     ; 1.510      ;
; 1.499 ; ctrl:controller|state.Decod           ; ctrl:controller|now_inst[0]           ; clk          ; clk         ; 0.000        ; 0.270      ; 2.035      ;
; 1.499 ; ctrl:controller|state.Decod           ; ctrl:controller|now_inst[1]           ; clk          ; clk         ; 0.000        ; 0.270      ; 2.035      ;
; 1.499 ; ctrl:controller|state.Decod           ; ctrl:controller|now_inst[2]           ; clk          ; clk         ; 0.000        ; 0.270      ; 2.035      ;
; 1.499 ; ctrl:controller|state.Decod           ; ctrl:controller|now_inst[3]           ; clk          ; clk         ; 0.000        ; 0.270      ; 2.035      ;
; 1.509 ; ctrl:controller|PC[1]                 ; ctrl:controller|PC[3]                 ; clk          ; clk         ; 0.000        ; 0.000      ; 1.775      ;
; 1.540 ; ctrl:controller|PC[3]                 ; ctrl:controller|OPCODE[3]             ; clk          ; clk         ; 0.000        ; -0.255     ; 1.551      ;
; 1.541 ; ctrl:controller|PC[3]                 ; ctrl:controller|OPCODE[0]             ; clk          ; clk         ; 0.000        ; -0.255     ; 1.552      ;
; 1.547 ; ctrl:controller|ADDRESS[1]            ; ctrl:controller|PC[2]                 ; clk          ; clk         ; 0.000        ; -0.002     ; 1.811      ;
; 1.548 ; ctrl:controller|OPCODE[3]             ; ctrl:controller|state.fetch           ; clk          ; clk         ; 0.000        ; 0.044      ; 1.858      ;
; 1.554 ; ctrl:controller|state.Decod           ; ctrl:controller|PC[0]                 ; clk          ; clk         ; 0.000        ; 0.000      ; 1.820      ;
+-------+---------------------------------------+---------------------------------------+--------------+-------------+--------------+------------+------------+


+------------------------------------------------------------------------------------------------------------------------+
; Slow Model Minimum Pulse Width: 'clk'                                                                                  ;
+--------+--------------+----------------+------------------+-------+------------+---------------------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock ; Clock Edge ; Target                                ;
+--------+--------------+----------------+------------------+-------+------------+---------------------------------------+
; -1.222 ; 1.000        ; 2.222          ; Port Rate        ; clk   ; Rise       ; clk                                   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; ctrl:controller|ADDRESS[0]            ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; ctrl:controller|ADDRESS[0]            ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; ctrl:controller|ADDRESS[1]            ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; ctrl:controller|ADDRESS[1]            ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; ctrl:controller|ADDRESS[2]            ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; ctrl:controller|ADDRESS[2]            ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; ctrl:controller|ADDRESS[3]            ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; ctrl:controller|ADDRESS[3]            ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; ctrl:controller|OPCODE[0]             ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; ctrl:controller|OPCODE[0]             ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; ctrl:controller|OPCODE[1]             ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; ctrl:controller|OPCODE[1]             ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; ctrl:controller|OPCODE[2]             ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; ctrl:controller|OPCODE[2]             ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; ctrl:controller|OPCODE[3]             ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; ctrl:controller|OPCODE[3]             ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; ctrl:controller|PC[0]                 ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; ctrl:controller|PC[0]                 ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; ctrl:controller|PC[1]                 ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; ctrl:controller|PC[1]                 ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; ctrl:controller|PC[2]                 ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; ctrl:controller|PC[2]                 ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; ctrl:controller|PC[3]                 ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; ctrl:controller|PC[3]                 ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; ctrl:controller|now_inst[0]           ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; ctrl:controller|now_inst[0]           ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; ctrl:controller|now_inst[1]           ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; ctrl:controller|now_inst[1]           ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; ctrl:controller|now_inst[2]           ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; ctrl:controller|now_inst[2]           ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; ctrl:controller|now_inst[3]           ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; ctrl:controller|now_inst[3]           ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; ctrl:controller|state.Decod           ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; ctrl:controller|state.Decod           ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; ctrl:controller|state.done            ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; ctrl:controller|state.done            ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; ctrl:controller|state.fetch           ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; ctrl:controller|state.fetch           ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; ctrl:controller|state.init            ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; ctrl:controller|state.init            ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; ctrl:controller|state.jmp_if_zero_jmp ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; ctrl:controller|state.jmp_if_zero_jmp ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; clk|combout                           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; clk|combout                           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; controller|ADDRESS[0]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; controller|ADDRESS[0]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; controller|ADDRESS[1]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; controller|ADDRESS[1]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; controller|ADDRESS[2]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; controller|ADDRESS[2]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; controller|ADDRESS[3]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; controller|ADDRESS[3]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; controller|OPCODE[0]|clk              ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; controller|OPCODE[0]|clk              ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; controller|OPCODE[1]|clk              ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; controller|OPCODE[1]|clk              ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; controller|OPCODE[2]|clk              ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; controller|OPCODE[2]|clk              ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; controller|OPCODE[3]|clk              ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; controller|OPCODE[3]|clk              ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; controller|PC[0]|clk                  ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; controller|PC[0]|clk                  ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; controller|PC[1]|clk                  ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; controller|PC[1]|clk                  ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; controller|PC[2]|clk                  ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; controller|PC[2]|clk                  ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; controller|PC[3]|clk                  ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; controller|PC[3]|clk                  ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; controller|now_inst[0]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; controller|now_inst[0]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; controller|now_inst[1]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; controller|now_inst[1]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; controller|now_inst[2]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; controller|now_inst[2]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; controller|now_inst[3]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; controller|now_inst[3]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; controller|state.Decod|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; controller|state.Decod|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; controller|state.done|clk             ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; controller|state.done|clk             ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; controller|state.fetch|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; controller|state.fetch|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; controller|state.init|clk             ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; controller|state.init|clk             ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; controller|state.jmp_if_zero_jmp|clk  ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; controller|state.jmp_if_zero_jmp|clk  ;
+--------+--------------+----------------+------------------+-------+------------+---------------------------------------+


+-----------------------------------------------------------------------+
; Setup Times                                                           ;
+-----------+------------+-------+-------+------------+-----------------+
; Data Port ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+-----------+------------+-------+-------+------------+-----------------+
; start     ; clk        ; 0.367 ; 0.367 ; Rise       ; clk             ;
+-----------+------------+-------+-------+------------+-----------------+


+-------------------------------------------------------------------------+
; Hold Times                                                              ;
+-----------+------------+--------+--------+------------+-----------------+
; Data Port ; Clock Port ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+-----------+------------+--------+--------+------------+-----------------+
; start     ; clk        ; -0.119 ; -0.119 ; Rise       ; clk             ;
+-----------+------------+--------+--------+------------+-----------------+


+----------------------------------------------------------------------------+
; Clock to Output Times                                                      ;
+--------------+------------+--------+--------+------------+-----------------+
; Data Port    ; Clock Port ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+--------------+------------+--------+--------+------------+-----------------+
; OPCdisp0[*]  ; clk        ; 10.619 ; 10.619 ; Rise       ; clk             ;
;  OPCdisp0[0] ; clk        ; 9.937  ; 9.937  ; Rise       ; clk             ;
;  OPCdisp0[3] ; clk        ; 10.409 ; 10.409 ; Rise       ; clk             ;
;  OPCdisp0[4] ; clk        ; 10.409 ; 10.409 ; Rise       ; clk             ;
;  OPCdisp0[5] ; clk        ; 10.619 ; 10.619 ; Rise       ; clk             ;
; OPCdisp1[*]  ; clk        ; 8.265  ; 8.265  ; Rise       ; clk             ;
;  OPCdisp1[0] ; clk        ; 8.265  ; 8.265  ; Rise       ; clk             ;
;  OPCdisp1[3] ; clk        ; 8.093  ; 8.093  ; Rise       ; clk             ;
;  OPCdisp1[4] ; clk        ; 8.113  ; 8.113  ; Rise       ; clk             ;
;  OPCdisp1[5] ; clk        ; 8.038  ; 8.038  ; Rise       ; clk             ;
; OPCdisp2[*]  ; clk        ; 8.173  ; 8.173  ; Rise       ; clk             ;
;  OPCdisp2[0] ; clk        ; 8.138  ; 8.138  ; Rise       ; clk             ;
;  OPCdisp2[3] ; clk        ; 8.152  ; 8.152  ; Rise       ; clk             ;
;  OPCdisp2[4] ; clk        ; 8.173  ; 8.173  ; Rise       ; clk             ;
;  OPCdisp2[5] ; clk        ; 8.173  ; 8.173  ; Rise       ; clk             ;
; OPCdisp3[*]  ; clk        ; 7.788  ; 7.788  ; Rise       ; clk             ;
;  OPCdisp3[0] ; clk        ; 7.773  ; 7.773  ; Rise       ; clk             ;
;  OPCdisp3[3] ; clk        ; 7.788  ; 7.788  ; Rise       ; clk             ;
;  OPCdisp3[4] ; clk        ; 7.788  ; 7.788  ; Rise       ; clk             ;
;  OPCdisp3[5] ; clk        ; 7.748  ; 7.748  ; Rise       ; clk             ;
+--------------+------------+--------+--------+------------+-----------------+


+----------------------------------------------------------------------------+
; Minimum Clock to Output Times                                              ;
+--------------+------------+--------+--------+------------+-----------------+
; Data Port    ; Clock Port ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+--------------+------------+--------+--------+------------+-----------------+
; OPCdisp0[*]  ; clk        ; 9.937  ; 9.937  ; Rise       ; clk             ;
;  OPCdisp0[0] ; clk        ; 9.937  ; 9.937  ; Rise       ; clk             ;
;  OPCdisp0[3] ; clk        ; 10.409 ; 10.409 ; Rise       ; clk             ;
;  OPCdisp0[4] ; clk        ; 10.409 ; 10.409 ; Rise       ; clk             ;
;  OPCdisp0[5] ; clk        ; 10.619 ; 10.619 ; Rise       ; clk             ;
; OPCdisp1[*]  ; clk        ; 8.038  ; 8.038  ; Rise       ; clk             ;
;  OPCdisp1[0] ; clk        ; 8.265  ; 8.265  ; Rise       ; clk             ;
;  OPCdisp1[3] ; clk        ; 8.093  ; 8.093  ; Rise       ; clk             ;
;  OPCdisp1[4] ; clk        ; 8.113  ; 8.113  ; Rise       ; clk             ;
;  OPCdisp1[5] ; clk        ; 8.038  ; 8.038  ; Rise       ; clk             ;
; OPCdisp2[*]  ; clk        ; 8.138  ; 8.138  ; Rise       ; clk             ;
;  OPCdisp2[0] ; clk        ; 8.138  ; 8.138  ; Rise       ; clk             ;
;  OPCdisp2[3] ; clk        ; 8.152  ; 8.152  ; Rise       ; clk             ;
;  OPCdisp2[4] ; clk        ; 8.173  ; 8.173  ; Rise       ; clk             ;
;  OPCdisp2[5] ; clk        ; 8.173  ; 8.173  ; Rise       ; clk             ;
; OPCdisp3[*]  ; clk        ; 7.748  ; 7.748  ; Rise       ; clk             ;
;  OPCdisp3[0] ; clk        ; 7.773  ; 7.773  ; Rise       ; clk             ;
;  OPCdisp3[3] ; clk        ; 7.788  ; 7.788  ; Rise       ; clk             ;
;  OPCdisp3[4] ; clk        ; 7.788  ; 7.788  ; Rise       ; clk             ;
;  OPCdisp3[5] ; clk        ; 7.748  ; 7.748  ; Rise       ; clk             ;
+--------------+------------+--------+--------+------------+-----------------+


+--------------------------------+
; Fast Model Setup Summary       ;
+-------+--------+---------------+
; Clock ; Slack  ; End Point TNS ;
+-------+--------+---------------+
; clk   ; -0.062 ; -0.073        ;
+-------+--------+---------------+


+-------------------------------+
; Fast Model Hold Summary       ;
+-------+-------+---------------+
; Clock ; Slack ; End Point TNS ;
+-------+-------+---------------+
; clk   ; 0.101 ; 0.000         ;
+-------+-------+---------------+


-------------------------------
; Fast Model Recovery Summary ;
-------------------------------
No paths to report.


------------------------------
; Fast Model Removal Summary ;
------------------------------
No paths to report.


+----------------------------------------+
; Fast Model Minimum Pulse Width Summary ;
+-------+--------+-----------------------+
; Clock ; Slack  ; End Point TNS         ;
+-------+--------+-----------------------+
; clk   ; -1.222 ; -22.222               ;
+-------+--------+-----------------------+


+--------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Setup: 'clk'                                                                                                                                      ;
+--------+---------------------------------------+---------------------------------------+--------------+-------------+--------------+------------+------------+
; Slack  ; From Node                             ; To Node                               ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+---------------------------------------+---------------------------------------+--------------+-------------+--------------+------------+------------+
; -0.062 ; ctrl:controller|OPCODE[2]             ; ctrl:controller|PC[3]                 ; clk          ; clk         ; 1.000        ; 0.131      ; 1.225      ;
; -0.046 ; ctrl:controller|PC[2]                 ; ctrl:controller|PC[3]                 ; clk          ; clk         ; 1.000        ; 0.000      ; 1.078      ;
; -0.039 ; ctrl:controller|PC[3]                 ; ctrl:controller|PC[3]                 ; clk          ; clk         ; 1.000        ; 0.000      ; 1.071      ;
; -0.008 ; ctrl:controller|OPCODE[2]             ; ctrl:controller|PC[2]                 ; clk          ; clk         ; 1.000        ; 0.131      ; 1.171      ;
; -0.003 ; ctrl:controller|OPCODE[2]             ; ctrl:controller|PC[1]                 ; clk          ; clk         ; 1.000        ; 0.131      ; 1.166      ;
; 0.008  ; ctrl:controller|OPCODE[2]             ; ctrl:controller|PC[0]                 ; clk          ; clk         ; 1.000        ; 0.026      ; 1.050      ;
; 0.024  ; ctrl:controller|PC[2]                 ; ctrl:controller|PC[2]                 ; clk          ; clk         ; 1.000        ; 0.000      ; 1.008      ;
; 0.033  ; ctrl:controller|PC[1]                 ; ctrl:controller|PC[3]                 ; clk          ; clk         ; 1.000        ; 0.000      ; 0.999      ;
; 0.044  ; ctrl:controller|OPCODE[0]             ; ctrl:controller|now_inst[0]           ; clk          ; clk         ; 1.000        ; 0.145      ; 1.133      ;
; 0.044  ; ctrl:controller|OPCODE[0]             ; ctrl:controller|now_inst[1]           ; clk          ; clk         ; 1.000        ; 0.145      ; 1.133      ;
; 0.044  ; ctrl:controller|OPCODE[0]             ; ctrl:controller|now_inst[2]           ; clk          ; clk         ; 1.000        ; 0.145      ; 1.133      ;
; 0.044  ; ctrl:controller|OPCODE[0]             ; ctrl:controller|now_inst[3]           ; clk          ; clk         ; 1.000        ; 0.145      ; 1.133      ;
; 0.053  ; ctrl:controller|OPCODE[3]             ; ctrl:controller|PC[3]                 ; clk          ; clk         ; 1.000        ; 0.131      ; 1.110      ;
; 0.059  ; ctrl:controller|OPCODE[2]             ; ctrl:controller|now_inst[0]           ; clk          ; clk         ; 1.000        ; 0.145      ; 1.118      ;
; 0.059  ; ctrl:controller|OPCODE[2]             ; ctrl:controller|now_inst[1]           ; clk          ; clk         ; 1.000        ; 0.145      ; 1.118      ;
; 0.059  ; ctrl:controller|OPCODE[2]             ; ctrl:controller|now_inst[2]           ; clk          ; clk         ; 1.000        ; 0.145      ; 1.118      ;
; 0.059  ; ctrl:controller|OPCODE[2]             ; ctrl:controller|now_inst[3]           ; clk          ; clk         ; 1.000        ; 0.145      ; 1.118      ;
; 0.064  ; ctrl:controller|PC[0]                 ; ctrl:controller|PC[3]                 ; clk          ; clk         ; 1.000        ; 0.105      ; 1.073      ;
; 0.069  ; ctrl:controller|ADDRESS[1]            ; ctrl:controller|PC[3]                 ; clk          ; clk         ; 1.000        ; -0.001     ; 0.962      ;
; 0.070  ; ctrl:controller|ADDRESS[0]            ; ctrl:controller|PC[3]                 ; clk          ; clk         ; 1.000        ; -0.001     ; 0.961      ;
; 0.096  ; ctrl:controller|state.Decod           ; ctrl:controller|PC[3]                 ; clk          ; clk         ; 1.000        ; 0.105      ; 1.041      ;
; 0.100  ; ctrl:controller|PC[1]                 ; ctrl:controller|PC[2]                 ; clk          ; clk         ; 1.000        ; 0.000      ; 0.932      ;
; 0.104  ; ctrl:controller|OPCODE[0]             ; ctrl:controller|PC[3]                 ; clk          ; clk         ; 1.000        ; 0.131      ; 1.059      ;
; 0.107  ; ctrl:controller|OPCODE[3]             ; ctrl:controller|PC[2]                 ; clk          ; clk         ; 1.000        ; 0.131      ; 1.056      ;
; 0.111  ; ctrl:controller|ADDRESS[0]            ; ctrl:controller|PC[0]                 ; clk          ; clk         ; 1.000        ; -0.106     ; 0.815      ;
; 0.112  ; ctrl:controller|OPCODE[3]             ; ctrl:controller|PC[1]                 ; clk          ; clk         ; 1.000        ; 0.131      ; 1.051      ;
; 0.116  ; ctrl:controller|PC[1]                 ; ctrl:controller|PC[1]                 ; clk          ; clk         ; 1.000        ; 0.000      ; 0.916      ;
; 0.117  ; ctrl:controller|OPCODE[3]             ; ctrl:controller|now_inst[0]           ; clk          ; clk         ; 1.000        ; 0.145      ; 1.060      ;
; 0.117  ; ctrl:controller|OPCODE[3]             ; ctrl:controller|now_inst[1]           ; clk          ; clk         ; 1.000        ; 0.145      ; 1.060      ;
; 0.117  ; ctrl:controller|OPCODE[3]             ; ctrl:controller|now_inst[2]           ; clk          ; clk         ; 1.000        ; 0.145      ; 1.060      ;
; 0.117  ; ctrl:controller|OPCODE[3]             ; ctrl:controller|now_inst[3]           ; clk          ; clk         ; 1.000        ; 0.145      ; 1.060      ;
; 0.118  ; ctrl:controller|state.Decod           ; ctrl:controller|now_inst[0]           ; clk          ; clk         ; 1.000        ; 0.119      ; 1.033      ;
; 0.118  ; ctrl:controller|state.Decod           ; ctrl:controller|now_inst[1]           ; clk          ; clk         ; 1.000        ; 0.119      ; 1.033      ;
; 0.118  ; ctrl:controller|state.Decod           ; ctrl:controller|now_inst[2]           ; clk          ; clk         ; 1.000        ; 0.119      ; 1.033      ;
; 0.118  ; ctrl:controller|state.Decod           ; ctrl:controller|now_inst[3]           ; clk          ; clk         ; 1.000        ; 0.119      ; 1.033      ;
; 0.123  ; ctrl:controller|OPCODE[3]             ; ctrl:controller|PC[0]                 ; clk          ; clk         ; 1.000        ; 0.026      ; 0.935      ;
; 0.131  ; ctrl:controller|PC[0]                 ; ctrl:controller|PC[2]                 ; clk          ; clk         ; 1.000        ; 0.105      ; 1.006      ;
; 0.152  ; ctrl:controller|state.fetch           ; ctrl:controller|PC[3]                 ; clk          ; clk         ; 1.000        ; 0.105      ; 0.985      ;
; 0.152  ; ctrl:controller|state.fetch           ; ctrl:controller|PC[1]                 ; clk          ; clk         ; 1.000        ; 0.105      ; 0.985      ;
; 0.152  ; ctrl:controller|state.fetch           ; ctrl:controller|PC[2]                 ; clk          ; clk         ; 1.000        ; 0.105      ; 0.985      ;
; 0.158  ; ctrl:controller|state.Decod           ; ctrl:controller|PC[2]                 ; clk          ; clk         ; 1.000        ; 0.105      ; 0.979      ;
; 0.158  ; ctrl:controller|OPCODE[0]             ; ctrl:controller|PC[2]                 ; clk          ; clk         ; 1.000        ; 0.131      ; 1.005      ;
; 0.162  ; ctrl:controller|state.fetch           ; ctrl:controller|OPCODE[2]             ; clk          ; clk         ; 1.000        ; -0.026     ; 0.844      ;
; 0.162  ; ctrl:controller|state.fetch           ; ctrl:controller|OPCODE[3]             ; clk          ; clk         ; 1.000        ; -0.026     ; 0.844      ;
; 0.162  ; ctrl:controller|state.fetch           ; ctrl:controller|OPCODE[0]             ; clk          ; clk         ; 1.000        ; -0.026     ; 0.844      ;
; 0.162  ; ctrl:controller|state.fetch           ; ctrl:controller|OPCODE[1]             ; clk          ; clk         ; 1.000        ; -0.026     ; 0.844      ;
; 0.163  ; ctrl:controller|OPCODE[0]             ; ctrl:controller|PC[1]                 ; clk          ; clk         ; 1.000        ; 0.131      ; 1.000      ;
; 0.173  ; ctrl:controller|PC[3]                 ; ctrl:controller|OPCODE[0]             ; clk          ; clk         ; 1.000        ; -0.131     ; 0.728      ;
; 0.174  ; ctrl:controller|PC[3]                 ; ctrl:controller|OPCODE[3]             ; clk          ; clk         ; 1.000        ; -0.131     ; 0.727      ;
; 0.174  ; ctrl:controller|OPCODE[0]             ; ctrl:controller|PC[0]                 ; clk          ; clk         ; 1.000        ; 0.026      ; 0.884      ;
; 0.176  ; ctrl:controller|PC[3]                 ; ctrl:controller|OPCODE[1]             ; clk          ; clk         ; 1.000        ; -0.131     ; 0.725      ;
; 0.178  ; ctrl:controller|OPCODE[1]             ; ctrl:controller|PC[3]                 ; clk          ; clk         ; 1.000        ; 0.131      ; 0.985      ;
; 0.180  ; ctrl:controller|state.fetch           ; ctrl:controller|ADDRESS[3]            ; clk          ; clk         ; 1.000        ; -0.009     ; 0.843      ;
; 0.180  ; ctrl:controller|state.fetch           ; ctrl:controller|ADDRESS[2]            ; clk          ; clk         ; 1.000        ; -0.009     ; 0.843      ;
; 0.183  ; ctrl:controller|OPCODE[1]             ; ctrl:controller|now_inst[0]           ; clk          ; clk         ; 1.000        ; 0.145      ; 0.994      ;
; 0.183  ; ctrl:controller|OPCODE[1]             ; ctrl:controller|now_inst[1]           ; clk          ; clk         ; 1.000        ; 0.145      ; 0.994      ;
; 0.183  ; ctrl:controller|OPCODE[1]             ; ctrl:controller|now_inst[2]           ; clk          ; clk         ; 1.000        ; 0.145      ; 0.994      ;
; 0.183  ; ctrl:controller|OPCODE[1]             ; ctrl:controller|now_inst[3]           ; clk          ; clk         ; 1.000        ; 0.145      ; 0.994      ;
; 0.184  ; ctrl:controller|state.jmp_if_zero_jmp ; ctrl:controller|PC[3]                 ; clk          ; clk         ; 1.000        ; 0.105      ; 0.953      ;
; 0.190  ; ctrl:controller|ADDRESS[1]            ; ctrl:controller|PC[2]                 ; clk          ; clk         ; 1.000        ; -0.001     ; 0.841      ;
; 0.191  ; ctrl:controller|ADDRESS[0]            ; ctrl:controller|PC[1]                 ; clk          ; clk         ; 1.000        ; -0.001     ; 0.840      ;
; 0.191  ; ctrl:controller|ADDRESS[0]            ; ctrl:controller|PC[2]                 ; clk          ; clk         ; 1.000        ; -0.001     ; 0.840      ;
; 0.196  ; ctrl:controller|state.Decod           ; ctrl:controller|PC[0]                 ; clk          ; clk         ; 1.000        ; 0.000      ; 0.836      ;
; 0.204  ; ctrl:controller|OPCODE[3]             ; ctrl:controller|state.fetch           ; clk          ; clk         ; 1.000        ; 0.026      ; 0.854      ;
; 0.211  ; ctrl:controller|PC[2]                 ; ctrl:controller|ADDRESS[2]            ; clk          ; clk         ; 1.000        ; -0.114     ; 0.707      ;
; 0.224  ; ctrl:controller|PC[0]                 ; ctrl:controller|PC[0]                 ; clk          ; clk         ; 1.000        ; 0.000      ; 0.808      ;
; 0.226  ; ctrl:controller|OPCODE[3]             ; ctrl:controller|state.jmp_if_zero_jmp ; clk          ; clk         ; 1.000        ; 0.026      ; 0.832      ;
; 0.226  ; ctrl:controller|OPCODE[3]             ; ctrl:controller|state.done            ; clk          ; clk         ; 1.000        ; 0.026      ; 0.832      ;
; 0.227  ; ctrl:controller|state.done            ; ctrl:controller|PC[3]                 ; clk          ; clk         ; 1.000        ; 0.105      ; 0.910      ;
; 0.227  ; ctrl:controller|state.done            ; ctrl:controller|PC[1]                 ; clk          ; clk         ; 1.000        ; 0.105      ; 0.910      ;
; 0.227  ; ctrl:controller|state.done            ; ctrl:controller|PC[2]                 ; clk          ; clk         ; 1.000        ; 0.105      ; 0.910      ;
; 0.228  ; ctrl:controller|ADDRESS[3]            ; ctrl:controller|PC[3]                 ; clk          ; clk         ; 1.000        ; 0.114      ; 0.918      ;
; 0.232  ; ctrl:controller|OPCODE[1]             ; ctrl:controller|PC[2]                 ; clk          ; clk         ; 1.000        ; 0.131      ; 0.931      ;
; 0.235  ; ctrl:controller|OPCODE[1]             ; ctrl:controller|state.fetch           ; clk          ; clk         ; 1.000        ; 0.026      ; 0.823      ;
; 0.237  ; ctrl:controller|OPCODE[1]             ; ctrl:controller|PC[1]                 ; clk          ; clk         ; 1.000        ; 0.131      ; 0.926      ;
; 0.246  ; ctrl:controller|state.jmp_if_zero_jmp ; ctrl:controller|PC[2]                 ; clk          ; clk         ; 1.000        ; 0.105      ; 0.891      ;
; 0.248  ; ctrl:controller|OPCODE[1]             ; ctrl:controller|PC[0]                 ; clk          ; clk         ; 1.000        ; 0.026      ; 0.810      ;
; 0.252  ; ctrl:controller|PC[1]                 ; ctrl:controller|OPCODE[1]             ; clk          ; clk         ; 1.000        ; -0.131     ; 0.649      ;
; 0.254  ; ctrl:controller|PC[1]                 ; ctrl:controller|OPCODE[0]             ; clk          ; clk         ; 1.000        ; -0.131     ; 0.647      ;
; 0.254  ; ctrl:controller|OPCODE[0]             ; ctrl:controller|state.fetch           ; clk          ; clk         ; 1.000        ; 0.026      ; 0.804      ;
; 0.255  ; ctrl:controller|PC[1]                 ; ctrl:controller|OPCODE[2]             ; clk          ; clk         ; 1.000        ; -0.131     ; 0.646      ;
; 0.255  ; ctrl:controller|PC[1]                 ; ctrl:controller|OPCODE[3]             ; clk          ; clk         ; 1.000        ; -0.131     ; 0.646      ;
; 0.259  ; ctrl:controller|state.Decod           ; ctrl:controller|state.fetch           ; clk          ; clk         ; 1.000        ; 0.000      ; 0.773      ;
; 0.271  ; ctrl:controller|state.fetch           ; ctrl:controller|PC[0]                 ; clk          ; clk         ; 1.000        ; 0.000      ; 0.761      ;
; 0.275  ; ctrl:controller|ADDRESS[1]            ; ctrl:controller|PC[1]                 ; clk          ; clk         ; 1.000        ; -0.001     ; 0.756      ;
; 0.284  ; ctrl:controller|PC[3]                 ; ctrl:controller|ADDRESS[2]            ; clk          ; clk         ; 1.000        ; -0.114     ; 0.634      ;
; 0.287  ; ctrl:controller|OPCODE[1]             ; ctrl:controller|state.jmp_if_zero_jmp ; clk          ; clk         ; 1.000        ; 0.026      ; 0.771      ;
; 0.287  ; ctrl:controller|OPCODE[1]             ; ctrl:controller|state.done            ; clk          ; clk         ; 1.000        ; 0.026      ; 0.771      ;
; 0.289  ; ctrl:controller|ADDRESS[2]            ; ctrl:controller|PC[2]                 ; clk          ; clk         ; 1.000        ; 0.114      ; 0.857      ;
; 0.298  ; ctrl:controller|PC[0]                 ; ctrl:controller|PC[1]                 ; clk          ; clk         ; 1.000        ; 0.105      ; 0.839      ;
; 0.301  ; ctrl:controller|OPCODE[0]             ; ctrl:controller|state.jmp_if_zero_jmp ; clk          ; clk         ; 1.000        ; 0.026      ; 0.757      ;
; 0.301  ; ctrl:controller|OPCODE[0]             ; ctrl:controller|state.done            ; clk          ; clk         ; 1.000        ; 0.026      ; 0.757      ;
; 0.303  ; ctrl:controller|state.Decod           ; ctrl:controller|state.jmp_if_zero_jmp ; clk          ; clk         ; 1.000        ; 0.000      ; 0.729      ;
; 0.303  ; ctrl:controller|state.Decod           ; ctrl:controller|state.done            ; clk          ; clk         ; 1.000        ; 0.000      ; 0.729      ;
; 0.305  ; ctrl:controller|PC[2]                 ; ctrl:controller|OPCODE[1]             ; clk          ; clk         ; 1.000        ; -0.131     ; 0.596      ;
; 0.307  ; ctrl:controller|PC[2]                 ; ctrl:controller|OPCODE[0]             ; clk          ; clk         ; 1.000        ; -0.131     ; 0.594      ;
; 0.307  ; ctrl:controller|PC[2]                 ; ctrl:controller|OPCODE[2]             ; clk          ; clk         ; 1.000        ; -0.131     ; 0.594      ;
; 0.308  ; ctrl:controller|PC[2]                 ; ctrl:controller|OPCODE[3]             ; clk          ; clk         ; 1.000        ; -0.131     ; 0.593      ;
; 0.332  ; ctrl:controller|PC[0]                 ; ctrl:controller|ADDRESS[2]            ; clk          ; clk         ; 1.000        ; -0.009     ; 0.691      ;
; 0.336  ; ctrl:controller|state.jmp_if_zero_jmp ; ctrl:controller|PC[0]                 ; clk          ; clk         ; 1.000        ; 0.000      ; 0.696      ;
+--------+---------------------------------------+---------------------------------------+--------------+-------------+--------------+------------+------------+


+-------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Hold: 'clk'                                                                                                                                      ;
+-------+---------------------------------------+---------------------------------------+--------------+-------------+--------------+------------+------------+
; Slack ; From Node                             ; To Node                               ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+-------+---------------------------------------+---------------------------------------+--------------+-------------+--------------+------------+------------+
; 0.101 ; ctrl:controller|OPCODE[1]             ; ctrl:controller|now_inst[1]           ; clk          ; clk         ; 0.000        ; 0.145      ; 0.398      ;
; 0.105 ; ctrl:controller|OPCODE[2]             ; ctrl:controller|now_inst[0]           ; clk          ; clk         ; 0.000        ; 0.145      ; 0.402      ;
; 0.163 ; ctrl:controller|OPCODE[3]             ; ctrl:controller|now_inst[0]           ; clk          ; clk         ; 0.000        ; 0.145      ; 0.460      ;
; 0.164 ; ctrl:controller|OPCODE[3]             ; ctrl:controller|now_inst[1]           ; clk          ; clk         ; 0.000        ; 0.145      ; 0.461      ;
; 0.199 ; ctrl:controller|OPCODE[3]             ; ctrl:controller|now_inst[3]           ; clk          ; clk         ; 0.000        ; 0.145      ; 0.496      ;
; 0.215 ; ctrl:controller|state.init            ; ctrl:controller|state.init            ; clk          ; clk         ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; ctrl:controller|PC[0]                 ; ctrl:controller|PC[0]                 ; clk          ; clk         ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; ctrl:controller|state.done            ; ctrl:controller|state.done            ; clk          ; clk         ; 0.000        ; 0.000      ; 0.367      ;
; 0.224 ; ctrl:controller|OPCODE[2]             ; ctrl:controller|now_inst[1]           ; clk          ; clk         ; 0.000        ; 0.145      ; 0.521      ;
; 0.244 ; ctrl:controller|OPCODE[0]             ; ctrl:controller|now_inst[0]           ; clk          ; clk         ; 0.000        ; 0.145      ; 0.541      ;
; 0.276 ; ctrl:controller|PC[0]                 ; ctrl:controller|ADDRESS[1]            ; clk          ; clk         ; 0.000        ; 0.106      ; 0.534      ;
; 0.278 ; ctrl:controller|PC[0]                 ; ctrl:controller|ADDRESS[0]            ; clk          ; clk         ; 0.000        ; 0.106      ; 0.536      ;
; 0.281 ; ctrl:controller|state.Decod           ; ctrl:controller|PC[1]                 ; clk          ; clk         ; 0.000        ; 0.105      ; 0.538      ;
; 0.289 ; ctrl:controller|state.init            ; ctrl:controller|state.fetch           ; clk          ; clk         ; 0.000        ; 0.127      ; 0.568      ;
; 0.318 ; ctrl:controller|PC[1]                 ; ctrl:controller|ADDRESS[0]            ; clk          ; clk         ; 0.000        ; 0.001      ; 0.471      ;
; 0.344 ; ctrl:controller|state.fetch           ; ctrl:controller|state.Decod           ; clk          ; clk         ; 0.000        ; 0.000      ; 0.496      ;
; 0.359 ; ctrl:controller|state.jmp_if_zero_jmp ; ctrl:controller|PC[2]                 ; clk          ; clk         ; 0.000        ; 0.105      ; 0.616      ;
; 0.360 ; ctrl:controller|OPCODE[2]             ; ctrl:controller|now_inst[2]           ; clk          ; clk         ; 0.000        ; 0.145      ; 0.657      ;
; 0.360 ; ctrl:controller|state.jmp_if_zero_jmp ; ctrl:controller|PC[1]                 ; clk          ; clk         ; 0.000        ; 0.105      ; 0.617      ;
; 0.361 ; ctrl:controller|state.jmp_if_zero_jmp ; ctrl:controller|PC[3]                 ; clk          ; clk         ; 0.000        ; 0.105      ; 0.618      ;
; 0.372 ; ctrl:controller|state.jmp_if_zero_jmp ; ctrl:controller|state.fetch           ; clk          ; clk         ; 0.000        ; 0.000      ; 0.524      ;
; 0.386 ; ctrl:controller|PC[3]                 ; ctrl:controller|ADDRESS[1]            ; clk          ; clk         ; 0.000        ; 0.001      ; 0.539      ;
; 0.387 ; ctrl:controller|PC[2]                 ; ctrl:controller|ADDRESS[1]            ; clk          ; clk         ; 0.000        ; 0.001      ; 0.540      ;
; 0.390 ; ctrl:controller|PC[2]                 ; ctrl:controller|ADDRESS[0]            ; clk          ; clk         ; 0.000        ; 0.001      ; 0.543      ;
; 0.469 ; ctrl:controller|ADDRESS[1]            ; ctrl:controller|PC[1]                 ; clk          ; clk         ; 0.000        ; -0.001     ; 0.620      ;
; 0.479 ; ctrl:controller|OPCODE[2]             ; ctrl:controller|state.jmp_if_zero_jmp ; clk          ; clk         ; 0.000        ; 0.026      ; 0.657      ;
; 0.486 ; ctrl:controller|PC[0]                 ; ctrl:controller|OPCODE[0]             ; clk          ; clk         ; 0.000        ; -0.026     ; 0.612      ;
; 0.491 ; ctrl:controller|PC[0]                 ; ctrl:controller|OPCODE[2]             ; clk          ; clk         ; 0.000        ; -0.026     ; 0.617      ;
; 0.492 ; ctrl:controller|PC[0]                 ; ctrl:controller|OPCODE[3]             ; clk          ; clk         ; 0.000        ; -0.026     ; 0.618      ;
; 0.494 ; ctrl:controller|PC[0]                 ; ctrl:controller|OPCODE[1]             ; clk          ; clk         ; 0.000        ; -0.026     ; 0.620      ;
; 0.494 ; ctrl:controller|PC[0]                 ; ctrl:controller|PC[2]                 ; clk          ; clk         ; 0.000        ; 0.105      ; 0.751      ;
; 0.523 ; ctrl:controller|state.fetch           ; ctrl:controller|ADDRESS[0]            ; clk          ; clk         ; 0.000        ; 0.106      ; 0.781      ;
; 0.523 ; ctrl:controller|state.fetch           ; ctrl:controller|ADDRESS[1]            ; clk          ; clk         ; 0.000        ; 0.106      ; 0.781      ;
; 0.534 ; ctrl:controller|state.done            ; ctrl:controller|PC[0]                 ; clk          ; clk         ; 0.000        ; 0.000      ; 0.686      ;
; 0.535 ; ctrl:controller|OPCODE[2]             ; ctrl:controller|state.done            ; clk          ; clk         ; 0.000        ; 0.026      ; 0.713      ;
; 0.540 ; ctrl:controller|PC[1]                 ; ctrl:controller|PC[2]                 ; clk          ; clk         ; 0.000        ; 0.000      ; 0.692      ;
; 0.541 ; ctrl:controller|PC[3]                 ; ctrl:controller|ADDRESS[3]            ; clk          ; clk         ; 0.000        ; -0.114     ; 0.579      ;
; 0.544 ; ctrl:controller|PC[1]                 ; ctrl:controller|ADDRESS[2]            ; clk          ; clk         ; 0.000        ; -0.114     ; 0.582      ;
; 0.544 ; ctrl:controller|state.jmp_if_zero_jmp ; ctrl:controller|PC[0]                 ; clk          ; clk         ; 0.000        ; 0.000      ; 0.696      ;
; 0.548 ; ctrl:controller|PC[0]                 ; ctrl:controller|ADDRESS[2]            ; clk          ; clk         ; 0.000        ; -0.009     ; 0.691      ;
; 0.554 ; ctrl:controller|ADDRESS[0]            ; ctrl:controller|PC[3]                 ; clk          ; clk         ; 0.000        ; -0.001     ; 0.705      ;
; 0.556 ; ctrl:controller|PC[0]                 ; ctrl:controller|PC[1]                 ; clk          ; clk         ; 0.000        ; 0.105      ; 0.813      ;
; 0.572 ; ctrl:controller|PC[2]                 ; ctrl:controller|OPCODE[3]             ; clk          ; clk         ; 0.000        ; -0.131     ; 0.593      ;
; 0.573 ; ctrl:controller|PC[2]                 ; ctrl:controller|OPCODE[0]             ; clk          ; clk         ; 0.000        ; -0.131     ; 0.594      ;
; 0.573 ; ctrl:controller|PC[2]                 ; ctrl:controller|OPCODE[2]             ; clk          ; clk         ; 0.000        ; -0.131     ; 0.594      ;
; 0.575 ; ctrl:controller|PC[2]                 ; ctrl:controller|OPCODE[1]             ; clk          ; clk         ; 0.000        ; -0.131     ; 0.596      ;
; 0.577 ; ctrl:controller|state.Decod           ; ctrl:controller|state.done            ; clk          ; clk         ; 0.000        ; 0.000      ; 0.729      ;
; 0.577 ; ctrl:controller|state.Decod           ; ctrl:controller|state.jmp_if_zero_jmp ; clk          ; clk         ; 0.000        ; 0.000      ; 0.729      ;
; 0.579 ; ctrl:controller|OPCODE[0]             ; ctrl:controller|state.done            ; clk          ; clk         ; 0.000        ; 0.026      ; 0.757      ;
; 0.579 ; ctrl:controller|OPCODE[0]             ; ctrl:controller|state.jmp_if_zero_jmp ; clk          ; clk         ; 0.000        ; 0.026      ; 0.757      ;
; 0.591 ; ctrl:controller|ADDRESS[2]            ; ctrl:controller|PC[2]                 ; clk          ; clk         ; 0.000        ; 0.114      ; 0.857      ;
; 0.593 ; ctrl:controller|OPCODE[1]             ; ctrl:controller|state.done            ; clk          ; clk         ; 0.000        ; 0.026      ; 0.771      ;
; 0.593 ; ctrl:controller|OPCODE[1]             ; ctrl:controller|state.jmp_if_zero_jmp ; clk          ; clk         ; 0.000        ; 0.026      ; 0.771      ;
; 0.596 ; ctrl:controller|PC[3]                 ; ctrl:controller|ADDRESS[2]            ; clk          ; clk         ; 0.000        ; -0.114     ; 0.634      ;
; 0.609 ; ctrl:controller|state.fetch           ; ctrl:controller|PC[0]                 ; clk          ; clk         ; 0.000        ; 0.000      ; 0.761      ;
; 0.611 ; ctrl:controller|ADDRESS[0]            ; ctrl:controller|PC[2]                 ; clk          ; clk         ; 0.000        ; -0.001     ; 0.762      ;
; 0.620 ; ctrl:controller|PC[2]                 ; ctrl:controller|PC[3]                 ; clk          ; clk         ; 0.000        ; 0.000      ; 0.772      ;
; 0.621 ; ctrl:controller|state.Decod           ; ctrl:controller|state.fetch           ; clk          ; clk         ; 0.000        ; 0.000      ; 0.773      ;
; 0.625 ; ctrl:controller|PC[1]                 ; ctrl:controller|OPCODE[2]             ; clk          ; clk         ; 0.000        ; -0.131     ; 0.646      ;
; 0.625 ; ctrl:controller|PC[1]                 ; ctrl:controller|OPCODE[3]             ; clk          ; clk         ; 0.000        ; -0.131     ; 0.646      ;
; 0.625 ; ctrl:controller|PC[0]                 ; ctrl:controller|PC[3]                 ; clk          ; clk         ; 0.000        ; 0.105      ; 0.882      ;
; 0.626 ; ctrl:controller|PC[1]                 ; ctrl:controller|OPCODE[0]             ; clk          ; clk         ; 0.000        ; -0.131     ; 0.647      ;
; 0.626 ; ctrl:controller|OPCODE[0]             ; ctrl:controller|state.fetch           ; clk          ; clk         ; 0.000        ; 0.026      ; 0.804      ;
; 0.627 ; ctrl:controller|PC[1]                 ; ctrl:controller|PC[1]                 ; clk          ; clk         ; 0.000        ; 0.000      ; 0.779      ;
; 0.628 ; ctrl:controller|PC[1]                 ; ctrl:controller|OPCODE[1]             ; clk          ; clk         ; 0.000        ; -0.131     ; 0.649      ;
; 0.632 ; ctrl:controller|OPCODE[1]             ; ctrl:controller|PC[0]                 ; clk          ; clk         ; 0.000        ; 0.026      ; 0.810      ;
; 0.643 ; ctrl:controller|OPCODE[1]             ; ctrl:controller|PC[1]                 ; clk          ; clk         ; 0.000        ; 0.131      ; 0.926      ;
; 0.643 ; ctrl:controller|ADDRESS[0]            ; ctrl:controller|PC[0]                 ; clk          ; clk         ; 0.000        ; -0.106     ; 0.689      ;
; 0.645 ; ctrl:controller|OPCODE[1]             ; ctrl:controller|state.fetch           ; clk          ; clk         ; 0.000        ; 0.026      ; 0.823      ;
; 0.648 ; ctrl:controller|OPCODE[1]             ; ctrl:controller|PC[2]                 ; clk          ; clk         ; 0.000        ; 0.131      ; 0.931      ;
; 0.652 ; ctrl:controller|ADDRESS[3]            ; ctrl:controller|PC[3]                 ; clk          ; clk         ; 0.000        ; 0.114      ; 0.918      ;
; 0.653 ; ctrl:controller|state.done            ; ctrl:controller|PC[3]                 ; clk          ; clk         ; 0.000        ; 0.105      ; 0.910      ;
; 0.653 ; ctrl:controller|state.done            ; ctrl:controller|PC[1]                 ; clk          ; clk         ; 0.000        ; 0.105      ; 0.910      ;
; 0.653 ; ctrl:controller|state.done            ; ctrl:controller|PC[2]                 ; clk          ; clk         ; 0.000        ; 0.105      ; 0.910      ;
; 0.654 ; ctrl:controller|OPCODE[3]             ; ctrl:controller|state.done            ; clk          ; clk         ; 0.000        ; 0.026      ; 0.832      ;
; 0.654 ; ctrl:controller|OPCODE[3]             ; ctrl:controller|state.jmp_if_zero_jmp ; clk          ; clk         ; 0.000        ; 0.026      ; 0.832      ;
; 0.656 ; ctrl:controller|PC[1]                 ; ctrl:controller|PC[3]                 ; clk          ; clk         ; 0.000        ; 0.000      ; 0.808      ;
; 0.669 ; ctrl:controller|PC[2]                 ; ctrl:controller|ADDRESS[2]            ; clk          ; clk         ; 0.000        ; -0.114     ; 0.707      ;
; 0.676 ; ctrl:controller|OPCODE[3]             ; ctrl:controller|state.fetch           ; clk          ; clk         ; 0.000        ; 0.026      ; 0.854      ;
; 0.678 ; ctrl:controller|PC[2]                 ; ctrl:controller|PC[2]                 ; clk          ; clk         ; 0.000        ; 0.000      ; 0.830      ;
; 0.683 ; ctrl:controller|PC[3]                 ; ctrl:controller|PC[3]                 ; clk          ; clk         ; 0.000        ; 0.000      ; 0.835      ;
; 0.684 ; ctrl:controller|state.Decod           ; ctrl:controller|PC[0]                 ; clk          ; clk         ; 0.000        ; 0.000      ; 0.836      ;
; 0.689 ; ctrl:controller|ADDRESS[0]            ; ctrl:controller|PC[1]                 ; clk          ; clk         ; 0.000        ; -0.001     ; 0.840      ;
; 0.690 ; ctrl:controller|ADDRESS[1]            ; ctrl:controller|PC[2]                 ; clk          ; clk         ; 0.000        ; -0.001     ; 0.841      ;
; 0.697 ; ctrl:controller|OPCODE[1]             ; ctrl:controller|now_inst[0]           ; clk          ; clk         ; 0.000        ; 0.145      ; 0.994      ;
; 0.697 ; ctrl:controller|OPCODE[1]             ; ctrl:controller|now_inst[2]           ; clk          ; clk         ; 0.000        ; 0.145      ; 0.994      ;
; 0.697 ; ctrl:controller|OPCODE[1]             ; ctrl:controller|now_inst[3]           ; clk          ; clk         ; 0.000        ; 0.145      ; 0.994      ;
; 0.700 ; ctrl:controller|state.fetch           ; ctrl:controller|ADDRESS[3]            ; clk          ; clk         ; 0.000        ; -0.009     ; 0.843      ;
; 0.700 ; ctrl:controller|state.fetch           ; ctrl:controller|ADDRESS[2]            ; clk          ; clk         ; 0.000        ; -0.009     ; 0.843      ;
; 0.702 ; ctrl:controller|OPCODE[1]             ; ctrl:controller|PC[3]                 ; clk          ; clk         ; 0.000        ; 0.131      ; 0.985      ;
; 0.704 ; ctrl:controller|PC[3]                 ; ctrl:controller|OPCODE[1]             ; clk          ; clk         ; 0.000        ; -0.131     ; 0.725      ;
; 0.706 ; ctrl:controller|PC[3]                 ; ctrl:controller|OPCODE[3]             ; clk          ; clk         ; 0.000        ; -0.131     ; 0.727      ;
; 0.706 ; ctrl:controller|OPCODE[0]             ; ctrl:controller|PC[0]                 ; clk          ; clk         ; 0.000        ; 0.026      ; 0.884      ;
; 0.707 ; ctrl:controller|PC[3]                 ; ctrl:controller|OPCODE[0]             ; clk          ; clk         ; 0.000        ; -0.131     ; 0.728      ;
; 0.717 ; ctrl:controller|OPCODE[0]             ; ctrl:controller|PC[1]                 ; clk          ; clk         ; 0.000        ; 0.131      ; 1.000      ;
; 0.718 ; ctrl:controller|state.fetch           ; ctrl:controller|OPCODE[2]             ; clk          ; clk         ; 0.000        ; -0.026     ; 0.844      ;
; 0.718 ; ctrl:controller|state.fetch           ; ctrl:controller|OPCODE[3]             ; clk          ; clk         ; 0.000        ; -0.026     ; 0.844      ;
; 0.718 ; ctrl:controller|state.fetch           ; ctrl:controller|OPCODE[0]             ; clk          ; clk         ; 0.000        ; -0.026     ; 0.844      ;
; 0.718 ; ctrl:controller|state.fetch           ; ctrl:controller|OPCODE[1]             ; clk          ; clk         ; 0.000        ; -0.026     ; 0.844      ;
; 0.722 ; ctrl:controller|state.Decod           ; ctrl:controller|PC[2]                 ; clk          ; clk         ; 0.000        ; 0.105      ; 0.979      ;
+-------+---------------------------------------+---------------------------------------+--------------+-------------+--------------+------------+------------+


+------------------------------------------------------------------------------------------------------------------------+
; Fast Model Minimum Pulse Width: 'clk'                                                                                  ;
+--------+--------------+----------------+------------------+-------+------------+---------------------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock ; Clock Edge ; Target                                ;
+--------+--------------+----------------+------------------+-------+------------+---------------------------------------+
; -1.222 ; 1.000        ; 2.222          ; Port Rate        ; clk   ; Rise       ; clk                                   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; ctrl:controller|ADDRESS[0]            ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; ctrl:controller|ADDRESS[0]            ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; ctrl:controller|ADDRESS[1]            ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; ctrl:controller|ADDRESS[1]            ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; ctrl:controller|ADDRESS[2]            ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; ctrl:controller|ADDRESS[2]            ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; ctrl:controller|ADDRESS[3]            ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; ctrl:controller|ADDRESS[3]            ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; ctrl:controller|OPCODE[0]             ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; ctrl:controller|OPCODE[0]             ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; ctrl:controller|OPCODE[1]             ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; ctrl:controller|OPCODE[1]             ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; ctrl:controller|OPCODE[2]             ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; ctrl:controller|OPCODE[2]             ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; ctrl:controller|OPCODE[3]             ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; ctrl:controller|OPCODE[3]             ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; ctrl:controller|PC[0]                 ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; ctrl:controller|PC[0]                 ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; ctrl:controller|PC[1]                 ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; ctrl:controller|PC[1]                 ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; ctrl:controller|PC[2]                 ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; ctrl:controller|PC[2]                 ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; ctrl:controller|PC[3]                 ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; ctrl:controller|PC[3]                 ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; ctrl:controller|now_inst[0]           ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; ctrl:controller|now_inst[0]           ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; ctrl:controller|now_inst[1]           ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; ctrl:controller|now_inst[1]           ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; ctrl:controller|now_inst[2]           ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; ctrl:controller|now_inst[2]           ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; ctrl:controller|now_inst[3]           ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; ctrl:controller|now_inst[3]           ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; ctrl:controller|state.Decod           ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; ctrl:controller|state.Decod           ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; ctrl:controller|state.done            ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; ctrl:controller|state.done            ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; ctrl:controller|state.fetch           ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; ctrl:controller|state.fetch           ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; ctrl:controller|state.init            ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; ctrl:controller|state.init            ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; ctrl:controller|state.jmp_if_zero_jmp ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; ctrl:controller|state.jmp_if_zero_jmp ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; clk|combout                           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; clk|combout                           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; controller|ADDRESS[0]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; controller|ADDRESS[0]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; controller|ADDRESS[1]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; controller|ADDRESS[1]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; controller|ADDRESS[2]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; controller|ADDRESS[2]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; controller|ADDRESS[3]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; controller|ADDRESS[3]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; controller|OPCODE[0]|clk              ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; controller|OPCODE[0]|clk              ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; controller|OPCODE[1]|clk              ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; controller|OPCODE[1]|clk              ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; controller|OPCODE[2]|clk              ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; controller|OPCODE[2]|clk              ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; controller|OPCODE[3]|clk              ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; controller|OPCODE[3]|clk              ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; controller|PC[0]|clk                  ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; controller|PC[0]|clk                  ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; controller|PC[1]|clk                  ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; controller|PC[1]|clk                  ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; controller|PC[2]|clk                  ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; controller|PC[2]|clk                  ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; controller|PC[3]|clk                  ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; controller|PC[3]|clk                  ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; controller|now_inst[0]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; controller|now_inst[0]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; controller|now_inst[1]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; controller|now_inst[1]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; controller|now_inst[2]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; controller|now_inst[2]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; controller|now_inst[3]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; controller|now_inst[3]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; controller|state.Decod|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; controller|state.Decod|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; controller|state.done|clk             ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; controller|state.done|clk             ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; controller|state.fetch|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; controller|state.fetch|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; controller|state.init|clk             ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; controller|state.init|clk             ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; controller|state.jmp_if_zero_jmp|clk  ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; controller|state.jmp_if_zero_jmp|clk  ;
+--------+--------------+----------------+------------------+-------+------------+---------------------------------------+


+-----------------------------------------------------------------------+
; Setup Times                                                           ;
+-----------+------------+-------+-------+------------+-----------------+
; Data Port ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+-----------+------------+-------+-------+------------+-----------------+
; start     ; clk        ; 0.061 ; 0.061 ; Rise       ; clk             ;
+-----------+------------+-------+-------+------------+-----------------+


+-----------------------------------------------------------------------+
; Hold Times                                                            ;
+-----------+------------+-------+-------+------------+-----------------+
; Data Port ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+-----------+------------+-------+-------+------------+-----------------+
; start     ; clk        ; 0.079 ; 0.079 ; Rise       ; clk             ;
+-----------+------------+-------+-------+------------+-----------------+


+--------------------------------------------------------------------------+
; Clock to Output Times                                                    ;
+--------------+------------+-------+-------+------------+-----------------+
; Data Port    ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+--------------+------------+-------+-------+------------+-----------------+
; OPCdisp0[*]  ; clk        ; 5.601 ; 5.601 ; Rise       ; clk             ;
;  OPCdisp0[0] ; clk        ; 5.304 ; 5.304 ; Rise       ; clk             ;
;  OPCdisp0[3] ; clk        ; 5.515 ; 5.515 ; Rise       ; clk             ;
;  OPCdisp0[4] ; clk        ; 5.515 ; 5.515 ; Rise       ; clk             ;
;  OPCdisp0[5] ; clk        ; 5.601 ; 5.601 ; Rise       ; clk             ;
; OPCdisp1[*]  ; clk        ; 4.337 ; 4.337 ; Rise       ; clk             ;
;  OPCdisp1[0] ; clk        ; 4.337 ; 4.337 ; Rise       ; clk             ;
;  OPCdisp1[3] ; clk        ; 4.202 ; 4.202 ; Rise       ; clk             ;
;  OPCdisp1[4] ; clk        ; 4.222 ; 4.222 ; Rise       ; clk             ;
;  OPCdisp1[5] ; clk        ; 4.178 ; 4.178 ; Rise       ; clk             ;
; OPCdisp2[*]  ; clk        ; 4.252 ; 4.252 ; Rise       ; clk             ;
;  OPCdisp2[0] ; clk        ; 4.238 ; 4.238 ; Rise       ; clk             ;
;  OPCdisp2[3] ; clk        ; 4.252 ; 4.252 ; Rise       ; clk             ;
;  OPCdisp2[4] ; clk        ; 4.248 ; 4.248 ; Rise       ; clk             ;
;  OPCdisp2[5] ; clk        ; 4.248 ; 4.248 ; Rise       ; clk             ;
; OPCdisp3[*]  ; clk        ; 4.075 ; 4.075 ; Rise       ; clk             ;
;  OPCdisp3[0] ; clk        ; 4.060 ; 4.060 ; Rise       ; clk             ;
;  OPCdisp3[3] ; clk        ; 4.075 ; 4.075 ; Rise       ; clk             ;
;  OPCdisp3[4] ; clk        ; 4.075 ; 4.075 ; Rise       ; clk             ;
;  OPCdisp3[5] ; clk        ; 4.036 ; 4.036 ; Rise       ; clk             ;
+--------------+------------+-------+-------+------------+-----------------+


+--------------------------------------------------------------------------+
; Minimum Clock to Output Times                                            ;
+--------------+------------+-------+-------+------------+-----------------+
; Data Port    ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+--------------+------------+-------+-------+------------+-----------------+
; OPCdisp0[*]  ; clk        ; 5.304 ; 5.304 ; Rise       ; clk             ;
;  OPCdisp0[0] ; clk        ; 5.304 ; 5.304 ; Rise       ; clk             ;
;  OPCdisp0[3] ; clk        ; 5.515 ; 5.515 ; Rise       ; clk             ;
;  OPCdisp0[4] ; clk        ; 5.515 ; 5.515 ; Rise       ; clk             ;
;  OPCdisp0[5] ; clk        ; 5.601 ; 5.601 ; Rise       ; clk             ;
; OPCdisp1[*]  ; clk        ; 4.178 ; 4.178 ; Rise       ; clk             ;
;  OPCdisp1[0] ; clk        ; 4.337 ; 4.337 ; Rise       ; clk             ;
;  OPCdisp1[3] ; clk        ; 4.202 ; 4.202 ; Rise       ; clk             ;
;  OPCdisp1[4] ; clk        ; 4.222 ; 4.222 ; Rise       ; clk             ;
;  OPCdisp1[5] ; clk        ; 4.178 ; 4.178 ; Rise       ; clk             ;
; OPCdisp2[*]  ; clk        ; 4.238 ; 4.238 ; Rise       ; clk             ;
;  OPCdisp2[0] ; clk        ; 4.238 ; 4.238 ; Rise       ; clk             ;
;  OPCdisp2[3] ; clk        ; 4.252 ; 4.252 ; Rise       ; clk             ;
;  OPCdisp2[4] ; clk        ; 4.248 ; 4.248 ; Rise       ; clk             ;
;  OPCdisp2[5] ; clk        ; 4.248 ; 4.248 ; Rise       ; clk             ;
; OPCdisp3[*]  ; clk        ; 4.036 ; 4.036 ; Rise       ; clk             ;
;  OPCdisp3[0] ; clk        ; 4.060 ; 4.060 ; Rise       ; clk             ;
;  OPCdisp3[3] ; clk        ; 4.075 ; 4.075 ; Rise       ; clk             ;
;  OPCdisp3[4] ; clk        ; 4.075 ; 4.075 ; Rise       ; clk             ;
;  OPCdisp3[5] ; clk        ; 4.036 ; 4.036 ; Rise       ; clk             ;
+--------------+------------+-------+-------+------------+-----------------+


+-------------------------------------------------------------------------------+
; Multicorner Timing Analysis Summary                                           ;
+------------------+---------+-------+----------+---------+---------------------+
; Clock            ; Setup   ; Hold  ; Recovery ; Removal ; Minimum Pulse Width ;
+------------------+---------+-------+----------+---------+---------------------+
; Worst-case Slack ; -1.368  ; 0.101 ; N/A      ; N/A     ; -1.222              ;
;  clk             ; -1.368  ; 0.101 ; N/A      ; N/A     ; -1.222              ;
; Design-wide TNS  ; -15.688 ; 0.0   ; 0.0      ; 0.0     ; -22.222             ;
;  clk             ; -15.688 ; 0.000 ; N/A      ; N/A     ; -22.222             ;
+------------------+---------+-------+----------+---------+---------------------+


+-----------------------------------------------------------------------+
; Setup Times                                                           ;
+-----------+------------+-------+-------+------------+-----------------+
; Data Port ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+-----------+------------+-------+-------+------------+-----------------+
; start     ; clk        ; 0.367 ; 0.367 ; Rise       ; clk             ;
+-----------+------------+-------+-------+------------+-----------------+


+-----------------------------------------------------------------------+
; Hold Times                                                            ;
+-----------+------------+-------+-------+------------+-----------------+
; Data Port ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+-----------+------------+-------+-------+------------+-----------------+
; start     ; clk        ; 0.079 ; 0.079 ; Rise       ; clk             ;
+-----------+------------+-------+-------+------------+-----------------+


+----------------------------------------------------------------------------+
; Clock to Output Times                                                      ;
+--------------+------------+--------+--------+------------+-----------------+
; Data Port    ; Clock Port ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+--------------+------------+--------+--------+------------+-----------------+
; OPCdisp0[*]  ; clk        ; 10.619 ; 10.619 ; Rise       ; clk             ;
;  OPCdisp0[0] ; clk        ; 9.937  ; 9.937  ; Rise       ; clk             ;
;  OPCdisp0[3] ; clk        ; 10.409 ; 10.409 ; Rise       ; clk             ;
;  OPCdisp0[4] ; clk        ; 10.409 ; 10.409 ; Rise       ; clk             ;
;  OPCdisp0[5] ; clk        ; 10.619 ; 10.619 ; Rise       ; clk             ;
; OPCdisp1[*]  ; clk        ; 8.265  ; 8.265  ; Rise       ; clk             ;
;  OPCdisp1[0] ; clk        ; 8.265  ; 8.265  ; Rise       ; clk             ;
;  OPCdisp1[3] ; clk        ; 8.093  ; 8.093  ; Rise       ; clk             ;
;  OPCdisp1[4] ; clk        ; 8.113  ; 8.113  ; Rise       ; clk             ;
;  OPCdisp1[5] ; clk        ; 8.038  ; 8.038  ; Rise       ; clk             ;
; OPCdisp2[*]  ; clk        ; 8.173  ; 8.173  ; Rise       ; clk             ;
;  OPCdisp2[0] ; clk        ; 8.138  ; 8.138  ; Rise       ; clk             ;
;  OPCdisp2[3] ; clk        ; 8.152  ; 8.152  ; Rise       ; clk             ;
;  OPCdisp2[4] ; clk        ; 8.173  ; 8.173  ; Rise       ; clk             ;
;  OPCdisp2[5] ; clk        ; 8.173  ; 8.173  ; Rise       ; clk             ;
; OPCdisp3[*]  ; clk        ; 7.788  ; 7.788  ; Rise       ; clk             ;
;  OPCdisp3[0] ; clk        ; 7.773  ; 7.773  ; Rise       ; clk             ;
;  OPCdisp3[3] ; clk        ; 7.788  ; 7.788  ; Rise       ; clk             ;
;  OPCdisp3[4] ; clk        ; 7.788  ; 7.788  ; Rise       ; clk             ;
;  OPCdisp3[5] ; clk        ; 7.748  ; 7.748  ; Rise       ; clk             ;
+--------------+------------+--------+--------+------------+-----------------+


+--------------------------------------------------------------------------+
; Minimum Clock to Output Times                                            ;
+--------------+------------+-------+-------+------------+-----------------+
; Data Port    ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+--------------+------------+-------+-------+------------+-----------------+
; OPCdisp0[*]  ; clk        ; 5.304 ; 5.304 ; Rise       ; clk             ;
;  OPCdisp0[0] ; clk        ; 5.304 ; 5.304 ; Rise       ; clk             ;
;  OPCdisp0[3] ; clk        ; 5.515 ; 5.515 ; Rise       ; clk             ;
;  OPCdisp0[4] ; clk        ; 5.515 ; 5.515 ; Rise       ; clk             ;
;  OPCdisp0[5] ; clk        ; 5.601 ; 5.601 ; Rise       ; clk             ;
; OPCdisp1[*]  ; clk        ; 4.178 ; 4.178 ; Rise       ; clk             ;
;  OPCdisp1[0] ; clk        ; 4.337 ; 4.337 ; Rise       ; clk             ;
;  OPCdisp1[3] ; clk        ; 4.202 ; 4.202 ; Rise       ; clk             ;
;  OPCdisp1[4] ; clk        ; 4.222 ; 4.222 ; Rise       ; clk             ;
;  OPCdisp1[5] ; clk        ; 4.178 ; 4.178 ; Rise       ; clk             ;
; OPCdisp2[*]  ; clk        ; 4.238 ; 4.238 ; Rise       ; clk             ;
;  OPCdisp2[0] ; clk        ; 4.238 ; 4.238 ; Rise       ; clk             ;
;  OPCdisp2[3] ; clk        ; 4.252 ; 4.252 ; Rise       ; clk             ;
;  OPCdisp2[4] ; clk        ; 4.248 ; 4.248 ; Rise       ; clk             ;
;  OPCdisp2[5] ; clk        ; 4.248 ; 4.248 ; Rise       ; clk             ;
; OPCdisp3[*]  ; clk        ; 4.036 ; 4.036 ; Rise       ; clk             ;
;  OPCdisp3[0] ; clk        ; 4.060 ; 4.060 ; Rise       ; clk             ;
;  OPCdisp3[3] ; clk        ; 4.075 ; 4.075 ; Rise       ; clk             ;
;  OPCdisp3[4] ; clk        ; 4.075 ; 4.075 ; Rise       ; clk             ;
;  OPCdisp3[5] ; clk        ; 4.036 ; 4.036 ; Rise       ; clk             ;
+--------------+------------+-------+-------+------------+-----------------+


+-------------------------------------------------------------------+
; Setup Transfers                                                   ;
+------------+----------+----------+----------+----------+----------+
; From Clock ; To Clock ; RR Paths ; FR Paths ; RF Paths ; FF Paths ;
+------------+----------+----------+----------+----------+----------+
; clk        ; clk      ; 159      ; 0        ; 0        ; 0        ;
+------------+----------+----------+----------+----------+----------+
Entries labeled "false path" only account for clock-to-clock false paths and not path-based false paths. As a result, actual path counts may be lower than reported.


+-------------------------------------------------------------------+
; Hold Transfers                                                    ;
+------------+----------+----------+----------+----------+----------+
; From Clock ; To Clock ; RR Paths ; FR Paths ; RF Paths ; FF Paths ;
+------------+----------+----------+----------+----------+----------+
; clk        ; clk      ; 159      ; 0        ; 0        ; 0        ;
+------------+----------+----------+----------+----------+----------+
Entries labeled "false path" only account for clock-to-clock false paths and not path-based false paths. As a result, actual path counts may be lower than reported.


---------------
; Report TCCS ;
---------------
No dedicated SERDES Transmitter circuitry present in device or used in design


---------------
; Report RSKM ;
---------------
No dedicated SERDES Receiver circuitry present in device or used in design


+------------------------------------------------+
; Unconstrained Paths                            ;
+---------------------------------+-------+------+
; Property                        ; Setup ; Hold ;
+---------------------------------+-------+------+
; Illegal Clocks                  ; 0     ; 0    ;
; Unconstrained Clocks            ; 0     ; 0    ;
; Unconstrained Input Ports       ; 1     ; 1    ;
; Unconstrained Input Port Paths  ; 2     ; 2    ;
; Unconstrained Output Ports      ; 16    ; 16   ;
; Unconstrained Output Port Paths ; 16    ; 16   ;
+---------------------------------+-------+------+


+------------------------------------+
; TimeQuest Timing Analyzer Messages ;
+------------------------------------+
Info: *******************************************************************
Info: Running Quartus II 64-Bit TimeQuest Timing Analyzer
    Info: Version 13.0.0 Build 156 04/24/2013 SJ Web Edition
    Info: Processing started: Sun Dec 10 16:53:11 2017
Info: Command: quartus_sta processador -c processador
Info: qsta_default_script.tcl version: #1
Warning (20028): Parallel compilation is not licensed and has been disabled
Info (21077): Low junction temperature is 0 degrees C
Info (21077): High junction temperature is 85 degrees C
Critical Warning (332012): Synopsys Design Constraints File file not found: 'processador.sdc'. A Synopsys Design Constraints File is required by the TimeQuest Timing Analyzer to get proper timing constraints. Without it, the Compiler will not properly optimize the design.
Info (332142): No user constrained base clocks found in the design. Calling "derive_clocks -period 1.0"
Info (332105): Deriving Clocks
    Info (332105): create_clock -period 1.000 -name clk clk
Info: Found TIMEQUEST_REPORT_SCRIPT_INCLUDE_DEFAULT_ANALYSIS = ON
Info: Analyzing Slow Model
Critical Warning (332148): Timing requirements not met
Info (332146): Worst-case setup slack is -1.368
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.368       -15.688 clk 
Info (332146): Worst-case hold slack is 0.220
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):     0.220         0.000 clk 
Info (332140): No Recovery paths to report
Info (332140): No Removal paths to report
Info (332146): Worst-case minimum pulse width slack is -1.222
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.222       -22.222 clk 
Info (332001): The selected device family is not supported by the report_metastability command.
Info: Analyzing Fast Model
Critical Warning (332148): Timing requirements not met
Info (332146): Worst-case setup slack is -0.062
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -0.062        -0.073 clk 
Info (332146): Worst-case hold slack is 0.101
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):     0.101         0.000 clk 
Info (332140): No Recovery paths to report
Info (332140): No Removal paths to report
Info (332146): Worst-case minimum pulse width slack is -1.222
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.222       -22.222 clk 
Info (332001): The selected device family is not supported by the report_metastability command.
Info (332102): Design is not fully constrained for setup requirements
Info (332102): Design is not fully constrained for hold requirements
Info: Quartus II 64-Bit TimeQuest Timing Analyzer was successful. 0 errors, 4 warnings
    Info: Peak virtual memory: 502 megabytes
    Info: Processing ended: Sun Dec 10 16:53:11 2017
    Info: Elapsed time: 00:00:00
    Info: Total CPU time (on all processors): 00:00:00


